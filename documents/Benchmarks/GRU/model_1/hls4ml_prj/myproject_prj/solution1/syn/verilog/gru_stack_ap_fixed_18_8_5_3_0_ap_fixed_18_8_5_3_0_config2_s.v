// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gru_stack_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_V,
        data_V_ap_vld,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [2159:0] data_V;
input   data_V_ap_vld;
output  [17:0] ap_return_0;
output  [17:0] ap_return_1;
output  [17:0] ap_return_2;
output  [17:0] ap_return_3;
output  [17:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [17:0] h_state_V114_0;
reg   [17:0] h_state_V114_1;
reg   [17:0] h_state_V114_2;
reg   [17:0] h_state_V114_3;
reg   [17:0] h_state_V114_4;
reg    data_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln487_fu_125_p2;
wire   [4:0] iloop_fu_131_p2;
reg   [4:0] iloop_reg_536;
reg    ap_block_state2;
wire   [17:0] data_in_0_V_fu_199_p1;
reg   [17:0] data_in_0_V_reg_541;
wire   [17:0] data_in_1_V_fu_245_p1;
reg   [17:0] data_in_1_V_reg_546;
wire   [17:0] data_in_2_V_fu_291_p1;
reg   [17:0] data_in_2_V_reg_551;
wire   [17:0] data_in_3_V_fu_337_p1;
reg   [17:0] data_in_3_V_reg_556;
wire   [17:0] data_in_4_V_fu_383_p1;
reg   [17:0] data_in_4_V_reg_561;
wire   [17:0] data_in_5_V_fu_429_p1;
reg   [17:0] data_in_5_V_reg_566;
wire    grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_start;
wire    grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_done;
wire    grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_idle;
wire    grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_ready;
wire    grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_reset_state;
wire   [17:0] grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_0;
wire   [17:0] grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_1;
wire   [17:0] grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_2;
wire   [17:0] grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_3;
wire   [17:0] grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_4;
reg   [0:0] reset_state_0_reg_74;
wire    ap_CS_fsm_state4;
reg    ap_block_state1;
reg   [4:0] iloop_0_reg_88;
reg    grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [5:0] shl_ln490_1_fu_145_p3;
wire   [7:0] shl_ln_fu_137_p3;
wire   [7:0] zext_ln203_fu_153_p1;
wire   [7:0] sub_ln203_fu_157_p2;
wire   [8:0] p_shl2_fu_171_p3;
wire   [11:0] p_shl1_fu_163_p3;
wire   [11:0] zext_ln203_1_fu_179_p1;
wire   [11:0] add_ln203_4_fu_183_p2;
wire   [2159:0] zext_ln203_2_fu_189_p1;
wire   [2159:0] lshr_ln203_fu_193_p2;
wire   [7:0] or_ln203_fu_203_p2;
wire   [8:0] p_shl4_fu_217_p3;
wire   [11:0] p_shl3_fu_209_p3;
wire   [11:0] zext_ln203_3_fu_225_p1;
wire   [11:0] add_ln203_5_fu_229_p2;
wire   [2159:0] zext_ln203_4_fu_235_p1;
wire   [2159:0] lshr_ln203_1_fu_239_p2;
wire   [7:0] add_ln203_fu_249_p2;
wire   [8:0] p_shl6_fu_263_p3;
wire   [11:0] p_shl5_fu_255_p3;
wire   [11:0] zext_ln203_5_fu_271_p1;
wire   [11:0] add_ln203_6_fu_275_p2;
wire   [2159:0] zext_ln203_6_fu_281_p1;
wire   [2159:0] lshr_ln203_2_fu_285_p2;
wire   [7:0] add_ln203_1_fu_295_p2;
wire   [8:0] p_shl8_fu_309_p3;
wire   [11:0] p_shl7_fu_301_p3;
wire   [11:0] zext_ln203_7_fu_317_p1;
wire   [11:0] add_ln203_7_fu_321_p2;
wire   [2159:0] zext_ln203_8_fu_327_p1;
wire   [2159:0] lshr_ln203_3_fu_331_p2;
wire   [7:0] add_ln203_2_fu_341_p2;
wire   [8:0] p_shl10_fu_355_p3;
wire   [11:0] p_shl9_fu_347_p3;
wire   [11:0] zext_ln203_9_fu_363_p1;
wire   [11:0] add_ln203_8_fu_367_p2;
wire   [2159:0] zext_ln203_10_fu_373_p1;
wire   [2159:0] lshr_ln203_4_fu_377_p2;
wire   [7:0] add_ln203_3_fu_387_p2;
wire   [8:0] p_shl11_fu_401_p3;
wire   [11:0] p_shl_fu_393_p3;
wire   [11:0] zext_ln203_11_fu_409_p1;
wire   [11:0] add_ln203_9_fu_413_p2;
wire   [2159:0] zext_ln203_12_fu_419_p1;
wire   [2159:0] lshr_ln203_5_fu_423_p2;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 h_state_V114_0 = 18'd0;
#0 h_state_V114_1 = 18'd0;
#0 h_state_V114_2 = 18'd0;
#0 h_state_V114_3 = 18'd0;
#0 h_state_V114_4 = 18'd0;
#0 grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_start_reg = 1'b0;
end

gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_start),
    .ap_done(grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_done),
    .ap_idle(grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_idle),
    .ap_ready(grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_ready),
    .reset_state(grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_reset_state),
    .data_0_V_read(data_in_0_V_reg_541),
    .data_1_V_read(data_in_1_V_reg_546),
    .data_2_V_read(data_in_2_V_reg_551),
    .data_3_V_read(data_in_3_V_reg_556),
    .data_4_V_read(data_in_4_V_reg_561),
    .data_5_V_read(data_in_5_V_reg_566),
    .ap_return_0(grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_0),
    .ap_return_1(grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_1),
    .ap_return_2(grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_2),
    .ap_return_3(grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_3),
    .ap_return_4(grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((icmp_ln487_fu_125_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_125_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_start_reg <= 1'b1;
        end else if ((grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_ready == 1'b1)) begin
            grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        iloop_0_reg_88 <= 5'd0;
    end else if (((grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        iloop_0_reg_88 <= iloop_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reset_state_0_reg_74 <= 1'd1;
    end else if (((grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        reset_state_0_reg_74 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln487_fu_125_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_125_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        data_in_0_V_reg_541 <= data_in_0_V_fu_199_p1;
        data_in_1_V_reg_546 <= data_in_1_V_fu_245_p1;
        data_in_2_V_reg_551 <= data_in_2_V_fu_291_p1;
        data_in_3_V_reg_556 <= data_in_3_V_fu_337_p1;
        data_in_4_V_reg_561 <= data_in_4_V_fu_383_p1;
        data_in_5_V_reg_566 <= data_in_5_V_fu_429_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        h_state_V114_0 <= grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_0;
        h_state_V114_1 <= grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_1;
        h_state_V114_2 <= grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_2;
        h_state_V114_3 <= grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_3;
        h_state_V114_4 <= grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln487_fu_125_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        iloop_reg_536 <= iloop_fu_131_p2;
    end
end

always @ (*) begin
    if ((~((icmp_ln487_fu_125_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_125_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln487_fu_125_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_125_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln487_fu_125_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_blk_n = data_V_ap_vld;
    end else begin
        data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln487_fu_125_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_125_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((icmp_ln487_fu_125_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_125_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln203_1_fu_295_p2 = (8'd3 + sub_ln203_fu_157_p2);

assign add_ln203_2_fu_341_p2 = (8'd4 + sub_ln203_fu_157_p2);

assign add_ln203_3_fu_387_p2 = (8'd5 + sub_ln203_fu_157_p2);

assign add_ln203_4_fu_183_p2 = (p_shl1_fu_163_p3 + zext_ln203_1_fu_179_p1);

assign add_ln203_5_fu_229_p2 = (p_shl3_fu_209_p3 + zext_ln203_3_fu_225_p1);

assign add_ln203_6_fu_275_p2 = (p_shl5_fu_255_p3 + zext_ln203_5_fu_271_p1);

assign add_ln203_7_fu_321_p2 = (p_shl7_fu_301_p3 + zext_ln203_7_fu_317_p1);

assign add_ln203_8_fu_367_p2 = (p_shl9_fu_347_p3 + zext_ln203_9_fu_363_p1);

assign add_ln203_9_fu_413_p2 = (p_shl_fu_393_p3 + zext_ln203_11_fu_409_p1);

assign add_ln203_fu_249_p2 = (8'd2 + sub_ln203_fu_157_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((icmp_ln487_fu_125_p2 == 1'd0) & (data_V_ap_vld == 1'b0));
end

assign ap_return_0 = h_state_V114_0;

assign ap_return_1 = h_state_V114_1;

assign ap_return_2 = h_state_V114_2;

assign ap_return_3 = h_state_V114_3;

assign ap_return_4 = h_state_V114_4;

assign data_in_0_V_fu_199_p1 = lshr_ln203_fu_193_p2[17:0];

assign data_in_1_V_fu_245_p1 = lshr_ln203_1_fu_239_p2[17:0];

assign data_in_2_V_fu_291_p1 = lshr_ln203_2_fu_285_p2[17:0];

assign data_in_3_V_fu_337_p1 = lshr_ln203_3_fu_331_p2[17:0];

assign data_in_4_V_fu_383_p1 = lshr_ln203_4_fu_377_p2[17:0];

assign data_in_5_V_fu_429_p1 = lshr_ln203_5_fu_423_p2[17:0];

assign grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_start = grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_ap_start_reg;

assign grp_gru_static_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s_fu_99_reset_state = reset_state_0_reg_74;

assign icmp_ln487_fu_125_p2 = ((iloop_0_reg_88 == 5'd20) ? 1'b1 : 1'b0);

assign iloop_fu_131_p2 = (iloop_0_reg_88 + 5'd1);

assign lshr_ln203_1_fu_239_p2 = data_V >> zext_ln203_4_fu_235_p1;

assign lshr_ln203_2_fu_285_p2 = data_V >> zext_ln203_6_fu_281_p1;

assign lshr_ln203_3_fu_331_p2 = data_V >> zext_ln203_8_fu_327_p1;

assign lshr_ln203_4_fu_377_p2 = data_V >> zext_ln203_10_fu_373_p1;

assign lshr_ln203_5_fu_423_p2 = data_V >> zext_ln203_12_fu_419_p1;

assign lshr_ln203_fu_193_p2 = data_V >> zext_ln203_2_fu_189_p1;

assign or_ln203_fu_203_p2 = (sub_ln203_fu_157_p2 | 8'd1);

assign p_shl10_fu_355_p3 = {{add_ln203_2_fu_341_p2}, {1'd0}};

assign p_shl11_fu_401_p3 = {{add_ln203_3_fu_387_p2}, {1'd0}};

assign p_shl1_fu_163_p3 = {{sub_ln203_fu_157_p2}, {4'd0}};

assign p_shl2_fu_171_p3 = {{sub_ln203_fu_157_p2}, {1'd0}};

assign p_shl3_fu_209_p3 = {{or_ln203_fu_203_p2}, {4'd0}};

assign p_shl4_fu_217_p3 = {{or_ln203_fu_203_p2}, {1'd0}};

assign p_shl5_fu_255_p3 = {{add_ln203_fu_249_p2}, {4'd0}};

assign p_shl6_fu_263_p3 = {{add_ln203_fu_249_p2}, {1'd0}};

assign p_shl7_fu_301_p3 = {{add_ln203_1_fu_295_p2}, {4'd0}};

assign p_shl8_fu_309_p3 = {{add_ln203_1_fu_295_p2}, {1'd0}};

assign p_shl9_fu_347_p3 = {{add_ln203_2_fu_341_p2}, {4'd0}};

assign p_shl_fu_393_p3 = {{add_ln203_3_fu_387_p2}, {4'd0}};

assign shl_ln490_1_fu_145_p3 = {{iloop_0_reg_88}, {1'd0}};

assign shl_ln_fu_137_p3 = {{iloop_0_reg_88}, {3'd0}};

assign sub_ln203_fu_157_p2 = (shl_ln_fu_137_p3 - zext_ln203_fu_153_p1);

assign zext_ln203_10_fu_373_p1 = add_ln203_8_fu_367_p2;

assign zext_ln203_11_fu_409_p1 = p_shl11_fu_401_p3;

assign zext_ln203_12_fu_419_p1 = add_ln203_9_fu_413_p2;

assign zext_ln203_1_fu_179_p1 = p_shl2_fu_171_p3;

assign zext_ln203_2_fu_189_p1 = add_ln203_4_fu_183_p2;

assign zext_ln203_3_fu_225_p1 = p_shl4_fu_217_p3;

assign zext_ln203_4_fu_235_p1 = add_ln203_5_fu_229_p2;

assign zext_ln203_5_fu_271_p1 = p_shl6_fu_263_p3;

assign zext_ln203_6_fu_281_p1 = add_ln203_6_fu_275_p2;

assign zext_ln203_7_fu_317_p1 = p_shl8_fu_309_p3;

assign zext_ln203_8_fu_327_p1 = add_ln203_7_fu_321_p2;

assign zext_ln203_9_fu_363_p1 = p_shl10_fu_355_p3;

assign zext_ln203_fu_153_p1 = shl_ln490_1_fu_145_p3;

endmodule //gru_stack_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config2_s
