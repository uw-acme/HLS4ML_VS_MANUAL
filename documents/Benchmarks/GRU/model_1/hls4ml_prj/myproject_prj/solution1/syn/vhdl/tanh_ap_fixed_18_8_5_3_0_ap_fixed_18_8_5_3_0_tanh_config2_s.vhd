-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tanh_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_tanh_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (17 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (17 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (17 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (17 downto 0) );
end;


architecture behav of tanh_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_tanh_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv28_FFFFFF9 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111111111001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_200 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_const_lv15_200 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tanh_table2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table2_ce0 : STD_LOGIC;
    signal tanh_table2_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table2_ce1 : STD_LOGIC;
    signal tanh_table2_q1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table2_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table2_ce2 : STD_LOGIC;
    signal tanh_table2_q2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table2_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table2_ce3 : STD_LOGIC;
    signal tanh_table2_q3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tanh_table2_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tanh_table2_ce4 : STD_LOGIC;
    signal tanh_table2_q4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln440_fu_285_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln440_1_fu_418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln440_2_fu_551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln440_3_fu_684_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln440_4_fu_817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_165_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln_fu_157_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln851_fu_185_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_fu_189_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_fu_175_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln851_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_fu_203_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln850_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_fu_209_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln850_fu_217_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln434_fu_225_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln434_fu_229_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_241_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln434_5_fu_235_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln436_fu_249_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_3_fu_261_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln438_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln436_fu_257_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln438_fu_277_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_298_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_1_fu_290_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln851_1_fu_318_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_1_fu_322_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_1_fu_308_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln851_1_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_1_fu_336_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln850_1_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_1_fu_342_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln850_1_fu_350_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln434_1_fu_358_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln434_1_fu_362_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_374_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln434_6_fu_368_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln436_1_fu_382_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_7_fu_394_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln438_1_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln436_1_fu_390_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln438_1_fu_410_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_431_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_2_fu_423_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln851_2_fu_451_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_2_fu_455_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_2_fu_441_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln851_2_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_2_fu_469_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln850_2_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_2_fu_475_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln850_2_fu_483_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln434_2_fu_491_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln434_2_fu_495_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_507_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln434_7_fu_501_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln436_2_fu_515_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_10_fu_527_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln438_2_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln436_2_fu_523_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln438_2_fu_543_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_564_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_3_fu_556_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln851_3_fu_584_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_3_fu_588_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_3_fu_574_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln851_3_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_3_fu_602_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln850_3_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_3_fu_608_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln850_3_fu_616_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln434_3_fu_624_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln434_3_fu_628_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_640_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln434_8_fu_634_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln436_3_fu_648_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_12_fu_660_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln438_3_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln436_3_fu_656_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln438_3_fu_676_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_697_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_4_fu_689_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln851_4_fu_717_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_2_4_fu_721_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln850_4_fu_707_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln851_4_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_4_fu_735_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln850_4_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_4_fu_741_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln850_4_fu_749_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln434_4_fu_757_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln434_4_fu_761_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_773_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln434_9_fu_767_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln436_4_fu_781_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_14_fu_793_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln438_4_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln436_4_fu_789_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln438_4_fu_809_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln440_fu_822_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln440_1_fu_826_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln440_2_fu_830_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln440_3_fu_834_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln440_4_fu_838_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component tanh_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_tanh_config2_s_tanh_table2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    tanh_table2_U : component tanh_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_tanh_config2_s_tanh_table2
    generic map (
        DataWidth => 11,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tanh_table2_address0,
        ce0 => tanh_table2_ce0,
        q0 => tanh_table2_q0,
        address1 => tanh_table2_address1,
        ce1 => tanh_table2_ce1,
        q1 => tanh_table2_q1,
        address2 => tanh_table2_address2,
        ce2 => tanh_table2_ce2,
        q2 => tanh_table2_q2,
        address3 => tanh_table2_address3,
        ce3 => tanh_table2_ce3,
        q3 => tanh_table2_q3,
        address4 => tanh_table2_address4,
        ce4 => tanh_table2_ce4,
        q4 => tanh_table2_q4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln434_1_fu_362_p2 <= std_logic_vector(unsigned(ap_const_lv16_200) + unsigned(select_ln850_1_fu_350_p3));
    add_ln434_2_fu_495_p2 <= std_logic_vector(unsigned(ap_const_lv16_200) + unsigned(select_ln850_2_fu_483_p3));
    add_ln434_3_fu_628_p2 <= std_logic_vector(unsigned(ap_const_lv16_200) + unsigned(select_ln850_3_fu_616_p3));
    add_ln434_4_fu_761_p2 <= std_logic_vector(unsigned(ap_const_lv16_200) + unsigned(select_ln850_4_fu_749_p3));
    add_ln434_5_fu_235_p2 <= std_logic_vector(unsigned(ap_const_lv15_200) + unsigned(trunc_ln434_fu_225_p1));
    add_ln434_6_fu_368_p2 <= std_logic_vector(unsigned(ap_const_lv15_200) + unsigned(trunc_ln434_1_fu_358_p1));
    add_ln434_7_fu_501_p2 <= std_logic_vector(unsigned(ap_const_lv15_200) + unsigned(trunc_ln434_2_fu_491_p1));
    add_ln434_8_fu_634_p2 <= std_logic_vector(unsigned(ap_const_lv15_200) + unsigned(trunc_ln434_3_fu_624_p1));
    add_ln434_9_fu_767_p2 <= std_logic_vector(unsigned(ap_const_lv15_200) + unsigned(trunc_ln434_4_fu_757_p1));
    add_ln434_fu_229_p2 <= std_logic_vector(unsigned(ap_const_lv16_200) + unsigned(select_ln850_fu_217_p3));
    add_ln700_1_fu_336_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(sext_ln850_1_fu_308_p1));
    add_ln700_2_fu_469_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(sext_ln850_2_fu_441_p1));
    add_ln700_3_fu_602_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(sext_ln850_3_fu_574_p1));
    add_ln700_4_fu_735_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(sext_ln850_4_fu_707_p1));
    add_ln700_fu_203_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(sext_ln850_fu_175_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= sext_ln440_fu_822_p1;
    ap_return_1 <= sext_ln440_1_fu_826_p1;
    ap_return_2 <= sext_ln440_2_fu_830_p1;
    ap_return_3 <= sext_ln440_3_fu_834_p1;
    ap_return_4 <= sext_ln440_4_fu_838_p1;
    icmp_ln438_1_fu_404_p2 <= "0" when (tmp_7_fu_394_p4 = ap_const_lv5_0) else "1";
    icmp_ln438_2_fu_537_p2 <= "0" when (tmp_10_fu_527_p4 = ap_const_lv5_0) else "1";
    icmp_ln438_3_fu_670_p2 <= "0" when (tmp_12_fu_660_p4 = ap_const_lv5_0) else "1";
    icmp_ln438_4_fu_803_p2 <= "0" when (tmp_14_fu_793_p4 = ap_const_lv5_0) else "1";
    icmp_ln438_fu_271_p2 <= "0" when (tmp_3_fu_261_p4 = ap_const_lv5_0) else "1";
    icmp_ln850_1_fu_312_p2 <= "1" when (signed(shl_ln1118_1_fu_290_p3) < signed(ap_const_lv28_FFFFFF9)) else "0";
    icmp_ln850_2_fu_445_p2 <= "1" when (signed(shl_ln1118_2_fu_423_p3) < signed(ap_const_lv28_FFFFFF9)) else "0";
    icmp_ln850_3_fu_578_p2 <= "1" when (signed(shl_ln1118_3_fu_556_p3) < signed(ap_const_lv28_FFFFFF9)) else "0";
    icmp_ln850_4_fu_711_p2 <= "1" when (signed(shl_ln1118_4_fu_689_p3) < signed(ap_const_lv28_FFFFFF9)) else "0";
    icmp_ln850_fu_179_p2 <= "1" when (signed(shl_ln_fu_157_p3) < signed(ap_const_lv28_FFFFFF9)) else "0";
    icmp_ln851_1_fu_330_p2 <= "1" when (p_Result_2_1_fu_322_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_2_fu_463_p2 <= "1" when (p_Result_2_2_fu_455_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_3_fu_596_p2 <= "1" when (p_Result_2_3_fu_588_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_4_fu_729_p2 <= "1" when (p_Result_2_4_fu_721_p3 = ap_const_lv10_0) else "0";
    icmp_ln851_fu_197_p2 <= "1" when (p_Result_2_fu_189_p3 = ap_const_lv10_0) else "0";
    p_Result_2_1_fu_322_p3 <= (trunc_ln851_1_fu_318_p1 & ap_const_lv7_0);
    p_Result_2_2_fu_455_p3 <= (trunc_ln851_2_fu_451_p1 & ap_const_lv7_0);
    p_Result_2_3_fu_588_p3 <= (trunc_ln851_3_fu_584_p1 & ap_const_lv7_0);
    p_Result_2_4_fu_721_p3 <= (trunc_ln851_4_fu_717_p1 & ap_const_lv7_0);
    p_Result_2_fu_189_p3 <= (trunc_ln851_fu_185_p1 & ap_const_lv7_0);
    select_ln436_1_fu_382_p3 <= 
        ap_const_lv15_0 when (tmp_5_fu_374_p3(0) = '1') else 
        add_ln434_6_fu_368_p2;
    select_ln436_2_fu_515_p3 <= 
        ap_const_lv15_0 when (tmp_9_fu_507_p3(0) = '1') else 
        add_ln434_7_fu_501_p2;
    select_ln436_3_fu_648_p3 <= 
        ap_const_lv15_0 when (tmp_11_fu_640_p3(0) = '1') else 
        add_ln434_8_fu_634_p2;
    select_ln436_4_fu_781_p3 <= 
        ap_const_lv15_0 when (tmp_13_fu_773_p3(0) = '1') else 
        add_ln434_9_fu_767_p2;
    select_ln436_fu_249_p3 <= 
        ap_const_lv15_0 when (tmp_1_fu_241_p3(0) = '1') else 
        add_ln434_5_fu_235_p2;
    select_ln438_1_fu_410_p3 <= 
        ap_const_lv10_3FF when (icmp_ln438_1_fu_404_p2(0) = '1') else 
        trunc_ln436_1_fu_390_p1;
    select_ln438_2_fu_543_p3 <= 
        ap_const_lv10_3FF when (icmp_ln438_2_fu_537_p2(0) = '1') else 
        trunc_ln436_2_fu_523_p1;
    select_ln438_3_fu_676_p3 <= 
        ap_const_lv10_3FF when (icmp_ln438_3_fu_670_p2(0) = '1') else 
        trunc_ln436_3_fu_656_p1;
    select_ln438_4_fu_809_p3 <= 
        ap_const_lv10_3FF when (icmp_ln438_4_fu_803_p2(0) = '1') else 
        trunc_ln436_4_fu_789_p1;
    select_ln438_fu_277_p3 <= 
        ap_const_lv10_3FF when (icmp_ln438_fu_271_p2(0) = '1') else 
        trunc_ln436_fu_257_p1;
    select_ln850_1_fu_350_p3 <= 
        select_ln851_1_fu_342_p3 when (icmp_ln850_1_fu_312_p2(0) = '1') else 
        sext_ln850_1_fu_308_p1;
    select_ln850_2_fu_483_p3 <= 
        select_ln851_2_fu_475_p3 when (icmp_ln850_2_fu_445_p2(0) = '1') else 
        sext_ln850_2_fu_441_p1;
    select_ln850_3_fu_616_p3 <= 
        select_ln851_3_fu_608_p3 when (icmp_ln850_3_fu_578_p2(0) = '1') else 
        sext_ln850_3_fu_574_p1;
    select_ln850_4_fu_749_p3 <= 
        select_ln851_4_fu_741_p3 when (icmp_ln850_4_fu_711_p2(0) = '1') else 
        sext_ln850_4_fu_707_p1;
    select_ln850_fu_217_p3 <= 
        select_ln851_fu_209_p3 when (icmp_ln850_fu_179_p2(0) = '1') else 
        sext_ln850_fu_175_p1;
    select_ln851_1_fu_342_p3 <= 
        sext_ln850_1_fu_308_p1 when (icmp_ln851_1_fu_330_p2(0) = '1') else 
        add_ln700_1_fu_336_p2;
    select_ln851_2_fu_475_p3 <= 
        sext_ln850_2_fu_441_p1 when (icmp_ln851_2_fu_463_p2(0) = '1') else 
        add_ln700_2_fu_469_p2;
    select_ln851_3_fu_608_p3 <= 
        sext_ln850_3_fu_574_p1 when (icmp_ln851_3_fu_596_p2(0) = '1') else 
        add_ln700_3_fu_602_p2;
    select_ln851_4_fu_741_p3 <= 
        sext_ln850_4_fu_707_p1 when (icmp_ln851_4_fu_729_p2(0) = '1') else 
        add_ln700_4_fu_735_p2;
    select_ln851_fu_209_p3 <= 
        sext_ln850_fu_175_p1 when (icmp_ln851_fu_197_p2(0) = '1') else 
        add_ln700_fu_203_p2;
        sext_ln440_1_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table2_q1),18));

        sext_ln440_2_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table2_q2),18));

        sext_ln440_3_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table2_q3),18));

        sext_ln440_4_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table2_q4),18));

        sext_ln440_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tanh_table2_q0),18));

        sext_ln850_1_fu_308_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_298_p4),16));

        sext_ln850_2_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_431_p4),16));

        sext_ln850_3_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_564_p4),16));

        sext_ln850_4_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_697_p4),16));

        sext_ln850_fu_175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_165_p4),16));

    shl_ln1118_1_fu_290_p3 <= (data_1_V_read & ap_const_lv10_0);
    shl_ln1118_2_fu_423_p3 <= (data_2_V_read & ap_const_lv10_0);
    shl_ln1118_3_fu_556_p3 <= (data_3_V_read & ap_const_lv10_0);
    shl_ln1118_4_fu_689_p3 <= (data_4_V_read & ap_const_lv10_0);
    shl_ln_fu_157_p3 <= (data_0_V_read & ap_const_lv10_0);
    tanh_table2_address0 <= zext_ln440_fu_285_p1(10 - 1 downto 0);
    tanh_table2_address1 <= zext_ln440_1_fu_418_p1(10 - 1 downto 0);
    tanh_table2_address2 <= zext_ln440_2_fu_551_p1(10 - 1 downto 0);
    tanh_table2_address3 <= zext_ln440_3_fu_684_p1(10 - 1 downto 0);
    tanh_table2_address4 <= zext_ln440_4_fu_817_p1(10 - 1 downto 0);

    tanh_table2_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tanh_table2_ce0 <= ap_const_logic_1;
        else 
            tanh_table2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table2_ce1_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tanh_table2_ce1 <= ap_const_logic_1;
        else 
            tanh_table2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table2_ce2_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tanh_table2_ce2 <= ap_const_logic_1;
        else 
            tanh_table2_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table2_ce3_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tanh_table2_ce3 <= ap_const_logic_1;
        else 
            tanh_table2_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    tanh_table2_ce4_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tanh_table2_ce4 <= ap_const_logic_1;
        else 
            tanh_table2_ce4 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_527_p4 <= select_ln436_2_fu_515_p3(14 downto 10);
    tmp_11_fu_640_p3 <= add_ln434_3_fu_628_p2(15 downto 15);
    tmp_12_fu_660_p4 <= select_ln436_3_fu_648_p3(14 downto 10);
    tmp_13_fu_773_p3 <= add_ln434_4_fu_761_p2(15 downto 15);
    tmp_14_fu_793_p4 <= select_ln436_4_fu_781_p3(14 downto 10);
    tmp_1_fu_241_p3 <= add_ln434_fu_229_p2(15 downto 15);
    tmp_2_fu_298_p4 <= data_1_V_read(17 downto 3);
    tmp_3_fu_261_p4 <= select_ln436_fu_249_p3(14 downto 10);
    tmp_4_fu_431_p4 <= data_2_V_read(17 downto 3);
    tmp_5_fu_374_p3 <= add_ln434_1_fu_362_p2(15 downto 15);
    tmp_6_fu_564_p4 <= data_3_V_read(17 downto 3);
    tmp_7_fu_394_p4 <= select_ln436_1_fu_382_p3(14 downto 10);
    tmp_8_fu_697_p4 <= data_4_V_read(17 downto 3);
    tmp_9_fu_507_p3 <= add_ln434_2_fu_495_p2(15 downto 15);
    tmp_fu_165_p4 <= data_0_V_read(17 downto 3);
    trunc_ln434_1_fu_358_p1 <= select_ln850_1_fu_350_p3(15 - 1 downto 0);
    trunc_ln434_2_fu_491_p1 <= select_ln850_2_fu_483_p3(15 - 1 downto 0);
    trunc_ln434_3_fu_624_p1 <= select_ln850_3_fu_616_p3(15 - 1 downto 0);
    trunc_ln434_4_fu_757_p1 <= select_ln850_4_fu_749_p3(15 - 1 downto 0);
    trunc_ln434_fu_225_p1 <= select_ln850_fu_217_p3(15 - 1 downto 0);
    trunc_ln436_1_fu_390_p1 <= select_ln436_1_fu_382_p3(10 - 1 downto 0);
    trunc_ln436_2_fu_523_p1 <= select_ln436_2_fu_515_p3(10 - 1 downto 0);
    trunc_ln436_3_fu_656_p1 <= select_ln436_3_fu_648_p3(10 - 1 downto 0);
    trunc_ln436_4_fu_789_p1 <= select_ln436_4_fu_781_p3(10 - 1 downto 0);
    trunc_ln436_fu_257_p1 <= select_ln436_fu_249_p3(10 - 1 downto 0);
    trunc_ln851_1_fu_318_p1 <= data_1_V_read(3 - 1 downto 0);
    trunc_ln851_2_fu_451_p1 <= data_2_V_read(3 - 1 downto 0);
    trunc_ln851_3_fu_584_p1 <= data_3_V_read(3 - 1 downto 0);
    trunc_ln851_4_fu_717_p1 <= data_4_V_read(3 - 1 downto 0);
    trunc_ln851_fu_185_p1 <= data_0_V_read(3 - 1 downto 0);
    zext_ln440_1_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln438_1_fu_410_p3),64));
    zext_ln440_2_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln438_2_fu_543_p3),64));
    zext_ln440_3_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln438_3_fu_676_p3),64));
    zext_ln440_4_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln438_4_fu_809_p3),64));
    zext_ln440_fu_285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln438_fu_277_p3),64));
end behav;
