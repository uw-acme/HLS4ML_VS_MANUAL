// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_ST_fsm_state1 = "1";
const sc_lv<2> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_ST_fsm_state2 = "10";
const sc_lv<32> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv32_1 = "1";
const sc_lv<32> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv32_A = "1010";
const sc_lv<32> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv32_1B = "11011";
const sc_lv<18> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv18_3FFC2 = "111111111111000010";
const sc_lv<28> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv28_FFFF6D4 = "1111111111111111011011010100";
const sc_lv<28> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv28_FFFF8E6 = "1111111111111111100011100110";
const sc_lv<28> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv28_5CC = "10111001100";
const sc_lv<28> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv28_FFFF3F6 = "1111111111111111001111110110";
const sc_lv<28> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv28_55B = "10101011011";
const sc_lv<18> dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_lv18_0 = "000000000000000000";
const bool dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::ap_const_boolean_1 = true;

dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myproject_mul_mul_17ns_13s_28_1_1_U240 = new myproject_mul_mul_17ns_13s_28_1_1<1,1,17,13,28>("myproject_mul_mul_17ns_13s_28_1_1_U240");
    myproject_mul_mul_17ns_13s_28_1_1_U240->din0(mul_ln1118_7_fu_154_p0);
    myproject_mul_mul_17ns_13s_28_1_1_U240->din1(mul_ln1118_7_fu_154_p1);
    myproject_mul_mul_17ns_13s_28_1_1_U240->dout(mul_ln1118_7_fu_154_p2);
    myproject_mul_mul_17ns_12s_28_1_1_U241 = new myproject_mul_mul_17ns_12s_28_1_1<1,1,17,12,28>("myproject_mul_mul_17ns_12s_28_1_1_U241");
    myproject_mul_mul_17ns_12s_28_1_1_U241->din0(mul_ln1118_8_fu_161_p0);
    myproject_mul_mul_17ns_12s_28_1_1_U241->din1(mul_ln1118_8_fu_161_p1);
    myproject_mul_mul_17ns_12s_28_1_1_U241->dout(mul_ln1118_8_fu_161_p2);
    myproject_mul_mul_17ns_12ns_28_1_1_U242 = new myproject_mul_mul_17ns_12ns_28_1_1<1,1,17,12,28>("myproject_mul_mul_17ns_12ns_28_1_1_U242");
    myproject_mul_mul_17ns_12ns_28_1_1_U242->din0(mul_ln1118_fu_168_p0);
    myproject_mul_mul_17ns_12ns_28_1_1_U242->din1(mul_ln1118_fu_168_p1);
    myproject_mul_mul_17ns_12ns_28_1_1_U242->dout(mul_ln1118_fu_168_p2);
    myproject_mul_mul_17ns_13s_28_1_1_U243 = new myproject_mul_mul_17ns_13s_28_1_1<1,1,17,13,28>("myproject_mul_mul_17ns_13s_28_1_1_U243");
    myproject_mul_mul_17ns_13s_28_1_1_U243->din0(mul_ln1118_5_fu_175_p0);
    myproject_mul_mul_17ns_13s_28_1_1_U243->din1(mul_ln1118_5_fu_175_p1);
    myproject_mul_mul_17ns_13s_28_1_1_U243->dout(mul_ln1118_5_fu_175_p2);
    myproject_mul_mul_17ns_12ns_28_1_1_U244 = new myproject_mul_mul_17ns_12ns_28_1_1<1,1,17,12,28>("myproject_mul_mul_17ns_12ns_28_1_1_U244");
    myproject_mul_mul_17ns_12ns_28_1_1_U244->din0(mul_ln1118_6_fu_182_p0);
    myproject_mul_mul_17ns_12ns_28_1_1_U244->din1(mul_ln1118_6_fu_182_p1);
    myproject_mul_mul_17ns_12ns_28_1_1_U244->dout(mul_ln1118_6_fu_182_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln703_1_fu_143_p2);
    sensitive << ( add_ln703_fu_137_p2 );
    sensitive << ( trunc_ln_fu_102_p4 );

    SC_METHOD(thread_add_ln703_2_fu_86_p2);
    sensitive << ( trunc_ln708_3_fu_77_p4 );

    SC_METHOD(thread_add_ln703_3_fu_92_p2);
    sensitive << ( add_ln703_2_fu_86_p2 );
    sensitive << ( trunc_ln708_2_fu_64_p4 );

    SC_METHOD(thread_add_ln703_4_fu_149_p2);
    sensitive << ( add_ln703_3_reg_189 );
    sensitive << ( add_ln703_1_fu_143_p2 );

    SC_METHOD(thread_add_ln703_fu_137_p2);
    sensitive << ( trunc_ln708_s_fu_115_p4 );
    sensitive << ( trunc_ln708_1_fu_128_p4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( add_ln703_4_fu_149_p2 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_mul_ln1118_5_fu_175_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( mul_ln1118_5_fu_175_p00 );

    SC_METHOD(thread_mul_ln1118_5_fu_175_p00);
    sensitive << ( data_1_V_read );

    SC_METHOD(thread_mul_ln1118_5_fu_175_p1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_mul_ln1118_6_fu_182_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( mul_ln1118_6_fu_182_p00 );

    SC_METHOD(thread_mul_ln1118_6_fu_182_p00);
    sensitive << ( data_2_V_read );

    SC_METHOD(thread_mul_ln1118_6_fu_182_p1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_mul_ln1118_7_fu_154_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mul_ln1118_7_fu_154_p00 );

    SC_METHOD(thread_mul_ln1118_7_fu_154_p00);
    sensitive << ( data_3_V_read );

    SC_METHOD(thread_mul_ln1118_7_fu_154_p1);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_mul_ln1118_8_fu_161_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mul_ln1118_8_fu_161_p00 );

    SC_METHOD(thread_mul_ln1118_8_fu_161_p00);
    sensitive << ( data_4_V_read );

    SC_METHOD(thread_mul_ln1118_8_fu_161_p1);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_mul_ln1118_fu_168_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( mul_ln1118_fu_168_p00 );

    SC_METHOD(thread_mul_ln1118_fu_168_p00);
    sensitive << ( data_0_V_read );

    SC_METHOD(thread_mul_ln1118_fu_168_p1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_trunc_ln708_1_fu_128_p4);
    sensitive << ( mul_ln1118_6_fu_182_p2 );

    SC_METHOD(thread_trunc_ln708_2_fu_64_p4);
    sensitive << ( mul_ln1118_7_fu_154_p2 );

    SC_METHOD(thread_trunc_ln708_3_fu_77_p4);
    sensitive << ( mul_ln1118_8_fu_161_p2 );

    SC_METHOD(thread_trunc_ln708_s_fu_115_p4);
    sensitive << ( mul_ln1118_5_fu_175_p2 );

    SC_METHOD(thread_trunc_ln_fu_102_p4);
    sensitive << ( mul_ln1118_fu_168_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "01";
    ap_return_preg = "000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_0_V_read, "(port)data_0_V_read");
    sc_trace(mVcdFile, data_1_V_read, "(port)data_1_V_read");
    sc_trace(mVcdFile, data_2_V_read, "(port)data_2_V_read");
    sc_trace(mVcdFile, data_3_V_read, "(port)data_3_V_read");
    sc_trace(mVcdFile, data_4_V_read, "(port)data_4_V_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln703_3_fu_92_p2, "add_ln703_3_fu_92_p2");
    sc_trace(mVcdFile, add_ln703_3_reg_189, "add_ln703_3_reg_189");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, mul_ln1118_7_fu_154_p2, "mul_ln1118_7_fu_154_p2");
    sc_trace(mVcdFile, mul_ln1118_8_fu_161_p2, "mul_ln1118_8_fu_161_p2");
    sc_trace(mVcdFile, trunc_ln708_3_fu_77_p4, "trunc_ln708_3_fu_77_p4");
    sc_trace(mVcdFile, add_ln703_2_fu_86_p2, "add_ln703_2_fu_86_p2");
    sc_trace(mVcdFile, trunc_ln708_2_fu_64_p4, "trunc_ln708_2_fu_64_p4");
    sc_trace(mVcdFile, mul_ln1118_fu_168_p2, "mul_ln1118_fu_168_p2");
    sc_trace(mVcdFile, mul_ln1118_5_fu_175_p2, "mul_ln1118_5_fu_175_p2");
    sc_trace(mVcdFile, mul_ln1118_6_fu_182_p2, "mul_ln1118_6_fu_182_p2");
    sc_trace(mVcdFile, trunc_ln708_s_fu_115_p4, "trunc_ln708_s_fu_115_p4");
    sc_trace(mVcdFile, trunc_ln708_1_fu_128_p4, "trunc_ln708_1_fu_128_p4");
    sc_trace(mVcdFile, add_ln703_fu_137_p2, "add_ln703_fu_137_p2");
    sc_trace(mVcdFile, trunc_ln_fu_102_p4, "trunc_ln_fu_102_p4");
    sc_trace(mVcdFile, add_ln703_1_fu_143_p2, "add_ln703_1_fu_143_p2");
    sc_trace(mVcdFile, mul_ln1118_7_fu_154_p0, "mul_ln1118_7_fu_154_p0");
    sc_trace(mVcdFile, mul_ln1118_7_fu_154_p1, "mul_ln1118_7_fu_154_p1");
    sc_trace(mVcdFile, mul_ln1118_8_fu_161_p0, "mul_ln1118_8_fu_161_p0");
    sc_trace(mVcdFile, mul_ln1118_8_fu_161_p1, "mul_ln1118_8_fu_161_p1");
    sc_trace(mVcdFile, mul_ln1118_fu_168_p0, "mul_ln1118_fu_168_p0");
    sc_trace(mVcdFile, mul_ln1118_fu_168_p1, "mul_ln1118_fu_168_p1");
    sc_trace(mVcdFile, mul_ln1118_5_fu_175_p0, "mul_ln1118_5_fu_175_p0");
    sc_trace(mVcdFile, mul_ln1118_5_fu_175_p1, "mul_ln1118_5_fu_175_p1");
    sc_trace(mVcdFile, mul_ln1118_6_fu_182_p0, "mul_ln1118_6_fu_182_p0");
    sc_trace(mVcdFile, mul_ln1118_6_fu_182_p1, "mul_ln1118_6_fu_182_p1");
    sc_trace(mVcdFile, add_ln703_4_fu_149_p2, "add_ln703_4_fu_149_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln1118_5_fu_175_p00, "mul_ln1118_5_fu_175_p00");
    sc_trace(mVcdFile, mul_ln1118_6_fu_182_p00, "mul_ln1118_6_fu_182_p00");
    sc_trace(mVcdFile, mul_ln1118_7_fu_154_p00, "mul_ln1118_7_fu_154_p00");
    sc_trace(mVcdFile, mul_ln1118_8_fu_161_p00, "mul_ln1118_8_fu_161_p00");
    sc_trace(mVcdFile, mul_ln1118_fu_168_p00, "mul_ln1118_fu_168_p00");
#endif

    }
}

dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::~dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete myproject_mul_mul_17ns_13s_28_1_1_U240;
    delete myproject_mul_mul_17ns_12s_28_1_1_U241;
    delete myproject_mul_mul_17ns_12ns_28_1_1_U242;
    delete myproject_mul_mul_17ns_13s_28_1_1_U243;
    delete myproject_mul_mul_17ns_12ns_28_1_1_U244;
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv18_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_return_preg = add_ln703_4_fu_149_p2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        add_ln703_3_reg_189 = add_ln703_3_fu_92_p2.read();
    }
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_add_ln703_1_fu_143_p2() {
    add_ln703_1_fu_143_p2 = (!add_ln703_fu_137_p2.read().is_01() || !trunc_ln_fu_102_p4.read().is_01())? sc_lv<18>(): (sc_biguint<18>(add_ln703_fu_137_p2.read()) + sc_biguint<18>(trunc_ln_fu_102_p4.read()));
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_add_ln703_2_fu_86_p2() {
    add_ln703_2_fu_86_p2 = (!trunc_ln708_3_fu_77_p4.read().is_01() || !ap_const_lv18_3FFC2.is_01())? sc_lv<18>(): (sc_biguint<18>(trunc_ln708_3_fu_77_p4.read()) + sc_bigint<18>(ap_const_lv18_3FFC2));
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_add_ln703_3_fu_92_p2() {
    add_ln703_3_fu_92_p2 = (!add_ln703_2_fu_86_p2.read().is_01() || !trunc_ln708_2_fu_64_p4.read().is_01())? sc_lv<18>(): (sc_biguint<18>(add_ln703_2_fu_86_p2.read()) + sc_biguint<18>(trunc_ln708_2_fu_64_p4.read()));
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_add_ln703_4_fu_149_p2() {
    add_ln703_4_fu_149_p2 = (!add_ln703_3_reg_189.read().is_01() || !add_ln703_1_fu_143_p2.read().is_01())? sc_lv<18>(): (sc_biguint<18>(add_ln703_3_reg_189.read()) + sc_biguint<18>(add_ln703_1_fu_143_p2.read()));
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_add_ln703_fu_137_p2() {
    add_ln703_fu_137_p2 = (!trunc_ln708_s_fu_115_p4.read().is_01() || !trunc_ln708_1_fu_128_p4.read().is_01())? sc_lv<18>(): (sc_biguint<18>(trunc_ln708_s_fu_115_p4.read()) + sc_biguint<18>(trunc_ln708_1_fu_128_p4.read()));
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_return = add_ln703_4_fu_149_p2.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_5_fu_175_p0() {
    mul_ln1118_5_fu_175_p0 =  (sc_lv<17>) (mul_ln1118_5_fu_175_p00.read());
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_5_fu_175_p00() {
    mul_ln1118_5_fu_175_p00 = esl_zext<28,17>(data_1_V_read.read());
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_5_fu_175_p1() {
    mul_ln1118_5_fu_175_p1 =  (sc_lv<13>) (ap_const_lv28_FFFF3F6);
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_6_fu_182_p0() {
    mul_ln1118_6_fu_182_p0 =  (sc_lv<17>) (mul_ln1118_6_fu_182_p00.read());
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_6_fu_182_p00() {
    mul_ln1118_6_fu_182_p00 = esl_zext<28,17>(data_2_V_read.read());
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_6_fu_182_p1() {
    mul_ln1118_6_fu_182_p1 =  (sc_lv<12>) (ap_const_lv28_55B);
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_7_fu_154_p0() {
    mul_ln1118_7_fu_154_p0 =  (sc_lv<17>) (mul_ln1118_7_fu_154_p00.read());
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_7_fu_154_p00() {
    mul_ln1118_7_fu_154_p00 = esl_zext<28,17>(data_3_V_read.read());
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_7_fu_154_p1() {
    mul_ln1118_7_fu_154_p1 =  (sc_lv<13>) (ap_const_lv28_FFFF6D4);
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_8_fu_161_p0() {
    mul_ln1118_8_fu_161_p0 =  (sc_lv<17>) (mul_ln1118_8_fu_161_p00.read());
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_8_fu_161_p00() {
    mul_ln1118_8_fu_161_p00 = esl_zext<28,17>(data_4_V_read.read());
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_8_fu_161_p1() {
    mul_ln1118_8_fu_161_p1 =  (sc_lv<12>) (ap_const_lv28_FFFF8E6);
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_fu_168_p0() {
    mul_ln1118_fu_168_p0 =  (sc_lv<17>) (mul_ln1118_fu_168_p00.read());
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_fu_168_p00() {
    mul_ln1118_fu_168_p00 = esl_zext<28,17>(data_0_V_read.read());
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_mul_ln1118_fu_168_p1() {
    mul_ln1118_fu_168_p1 =  (sc_lv<12>) (ap_const_lv28_5CC);
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_trunc_ln708_1_fu_128_p4() {
    trunc_ln708_1_fu_128_p4 = mul_ln1118_6_fu_182_p2.read().range(27, 10);
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_trunc_ln708_2_fu_64_p4() {
    trunc_ln708_2_fu_64_p4 = mul_ln1118_7_fu_154_p2.read().range(27, 10);
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_trunc_ln708_3_fu_77_p4() {
    trunc_ln708_3_fu_77_p4 = mul_ln1118_8_fu_161_p2.read().range(27, 10);
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_trunc_ln708_s_fu_115_p4() {
    trunc_ln708_s_fu_115_p4 = mul_ln1118_5_fu_175_p2.read().range(27, 10);
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_trunc_ln_fu_102_p4() {
    trunc_ln_fu_102_p4 = mul_ln1118_fu_168_p2.read().range(27, 10);
}

void dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config5_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}

