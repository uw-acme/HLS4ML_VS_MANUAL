// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tanh_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_tanh_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [17:0] data_0_V_read;
input  [17:0] data_1_V_read;
input  [17:0] data_2_V_read;
input  [17:0] data_3_V_read;
input  [17:0] data_4_V_read;
output  [17:0] ap_return_0;
output  [17:0] ap_return_1;
output  [17:0] ap_return_2;
output  [17:0] ap_return_3;
output  [17:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] tanh_table2_address0;
reg    tanh_table2_ce0;
wire   [10:0] tanh_table2_q0;
wire   [9:0] tanh_table2_address1;
reg    tanh_table2_ce1;
wire   [10:0] tanh_table2_q1;
wire   [9:0] tanh_table2_address2;
reg    tanh_table2_ce2;
wire   [10:0] tanh_table2_q2;
wire   [9:0] tanh_table2_address3;
reg    tanh_table2_ce3;
wire   [10:0] tanh_table2_q3;
wire   [9:0] tanh_table2_address4;
reg    tanh_table2_ce4;
wire   [10:0] tanh_table2_q4;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln440_fu_285_p1;
wire   [63:0] zext_ln440_1_fu_418_p1;
wire   [63:0] zext_ln440_2_fu_551_p1;
wire   [63:0] zext_ln440_3_fu_684_p1;
wire   [63:0] zext_ln440_4_fu_817_p1;
wire   [14:0] tmp_fu_165_p4;
wire   [27:0] shl_ln_fu_157_p3;
wire   [2:0] trunc_ln851_fu_185_p1;
wire   [9:0] p_Result_2_fu_189_p3;
wire  signed [15:0] sext_ln850_fu_175_p1;
wire   [0:0] icmp_ln851_fu_197_p2;
wire   [15:0] add_ln700_fu_203_p2;
wire   [0:0] icmp_ln850_fu_179_p2;
wire   [15:0] select_ln851_fu_209_p3;
wire   [15:0] select_ln850_fu_217_p3;
wire   [14:0] trunc_ln434_fu_225_p1;
wire   [15:0] add_ln434_fu_229_p2;
wire   [0:0] tmp_1_fu_241_p3;
wire   [14:0] add_ln434_5_fu_235_p2;
wire   [14:0] select_ln436_fu_249_p3;
wire   [4:0] tmp_3_fu_261_p4;
wire   [0:0] icmp_ln438_fu_271_p2;
wire   [9:0] trunc_ln436_fu_257_p1;
wire   [9:0] select_ln438_fu_277_p3;
wire   [14:0] tmp_2_fu_298_p4;
wire   [27:0] shl_ln1118_1_fu_290_p3;
wire   [2:0] trunc_ln851_1_fu_318_p1;
wire   [9:0] p_Result_2_1_fu_322_p3;
wire  signed [15:0] sext_ln850_1_fu_308_p1;
wire   [0:0] icmp_ln851_1_fu_330_p2;
wire   [15:0] add_ln700_1_fu_336_p2;
wire   [0:0] icmp_ln850_1_fu_312_p2;
wire   [15:0] select_ln851_1_fu_342_p3;
wire   [15:0] select_ln850_1_fu_350_p3;
wire   [14:0] trunc_ln434_1_fu_358_p1;
wire   [15:0] add_ln434_1_fu_362_p2;
wire   [0:0] tmp_5_fu_374_p3;
wire   [14:0] add_ln434_6_fu_368_p2;
wire   [14:0] select_ln436_1_fu_382_p3;
wire   [4:0] tmp_7_fu_394_p4;
wire   [0:0] icmp_ln438_1_fu_404_p2;
wire   [9:0] trunc_ln436_1_fu_390_p1;
wire   [9:0] select_ln438_1_fu_410_p3;
wire   [14:0] tmp_4_fu_431_p4;
wire   [27:0] shl_ln1118_2_fu_423_p3;
wire   [2:0] trunc_ln851_2_fu_451_p1;
wire   [9:0] p_Result_2_2_fu_455_p3;
wire  signed [15:0] sext_ln850_2_fu_441_p1;
wire   [0:0] icmp_ln851_2_fu_463_p2;
wire   [15:0] add_ln700_2_fu_469_p2;
wire   [0:0] icmp_ln850_2_fu_445_p2;
wire   [15:0] select_ln851_2_fu_475_p3;
wire   [15:0] select_ln850_2_fu_483_p3;
wire   [14:0] trunc_ln434_2_fu_491_p1;
wire   [15:0] add_ln434_2_fu_495_p2;
wire   [0:0] tmp_9_fu_507_p3;
wire   [14:0] add_ln434_7_fu_501_p2;
wire   [14:0] select_ln436_2_fu_515_p3;
wire   [4:0] tmp_10_fu_527_p4;
wire   [0:0] icmp_ln438_2_fu_537_p2;
wire   [9:0] trunc_ln436_2_fu_523_p1;
wire   [9:0] select_ln438_2_fu_543_p3;
wire   [14:0] tmp_6_fu_564_p4;
wire   [27:0] shl_ln1118_3_fu_556_p3;
wire   [2:0] trunc_ln851_3_fu_584_p1;
wire   [9:0] p_Result_2_3_fu_588_p3;
wire  signed [15:0] sext_ln850_3_fu_574_p1;
wire   [0:0] icmp_ln851_3_fu_596_p2;
wire   [15:0] add_ln700_3_fu_602_p2;
wire   [0:0] icmp_ln850_3_fu_578_p2;
wire   [15:0] select_ln851_3_fu_608_p3;
wire   [15:0] select_ln850_3_fu_616_p3;
wire   [14:0] trunc_ln434_3_fu_624_p1;
wire   [15:0] add_ln434_3_fu_628_p2;
wire   [0:0] tmp_11_fu_640_p3;
wire   [14:0] add_ln434_8_fu_634_p2;
wire   [14:0] select_ln436_3_fu_648_p3;
wire   [4:0] tmp_12_fu_660_p4;
wire   [0:0] icmp_ln438_3_fu_670_p2;
wire   [9:0] trunc_ln436_3_fu_656_p1;
wire   [9:0] select_ln438_3_fu_676_p3;
wire   [14:0] tmp_8_fu_697_p4;
wire   [27:0] shl_ln1118_4_fu_689_p3;
wire   [2:0] trunc_ln851_4_fu_717_p1;
wire   [9:0] p_Result_2_4_fu_721_p3;
wire  signed [15:0] sext_ln850_4_fu_707_p1;
wire   [0:0] icmp_ln851_4_fu_729_p2;
wire   [15:0] add_ln700_4_fu_735_p2;
wire   [0:0] icmp_ln850_4_fu_711_p2;
wire   [15:0] select_ln851_4_fu_741_p3;
wire   [15:0] select_ln850_4_fu_749_p3;
wire   [14:0] trunc_ln434_4_fu_757_p1;
wire   [15:0] add_ln434_4_fu_761_p2;
wire   [0:0] tmp_13_fu_773_p3;
wire   [14:0] add_ln434_9_fu_767_p2;
wire   [14:0] select_ln436_4_fu_781_p3;
wire   [4:0] tmp_14_fu_793_p4;
wire   [0:0] icmp_ln438_4_fu_803_p2;
wire   [9:0] trunc_ln436_4_fu_789_p1;
wire   [9:0] select_ln438_4_fu_809_p3;
wire  signed [17:0] sext_ln440_fu_822_p1;
wire  signed [17:0] sext_ln440_1_fu_826_p1;
wire  signed [17:0] sext_ln440_2_fu_830_p1;
wire  signed [17:0] sext_ln440_3_fu_834_p1;
wire  signed [17:0] sext_ln440_4_fu_838_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

tanh_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_tanh_config2_s_tanh_table2 #(
    .DataWidth( 11 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
tanh_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tanh_table2_address0),
    .ce0(tanh_table2_ce0),
    .q0(tanh_table2_q0),
    .address1(tanh_table2_address1),
    .ce1(tanh_table2_ce1),
    .q1(tanh_table2_q1),
    .address2(tanh_table2_address2),
    .ce2(tanh_table2_ce2),
    .q2(tanh_table2_q2),
    .address3(tanh_table2_address3),
    .ce3(tanh_table2_ce3),
    .q3(tanh_table2_q3),
    .address4(tanh_table2_address4),
    .ce4(tanh_table2_ce4),
    .q4(tanh_table2_q4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table2_ce0 = 1'b1;
    end else begin
        tanh_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table2_ce1 = 1'b1;
    end else begin
        tanh_table2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table2_ce2 = 1'b1;
    end else begin
        tanh_table2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table2_ce3 = 1'b1;
    end else begin
        tanh_table2_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tanh_table2_ce4 = 1'b1;
    end else begin
        tanh_table2_ce4 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln434_1_fu_362_p2 = (16'd512 + select_ln850_1_fu_350_p3);

assign add_ln434_2_fu_495_p2 = (16'd512 + select_ln850_2_fu_483_p3);

assign add_ln434_3_fu_628_p2 = (16'd512 + select_ln850_3_fu_616_p3);

assign add_ln434_4_fu_761_p2 = (16'd512 + select_ln850_4_fu_749_p3);

assign add_ln434_5_fu_235_p2 = (15'd512 + trunc_ln434_fu_225_p1);

assign add_ln434_6_fu_368_p2 = (15'd512 + trunc_ln434_1_fu_358_p1);

assign add_ln434_7_fu_501_p2 = (15'd512 + trunc_ln434_2_fu_491_p1);

assign add_ln434_8_fu_634_p2 = (15'd512 + trunc_ln434_3_fu_624_p1);

assign add_ln434_9_fu_767_p2 = (15'd512 + trunc_ln434_4_fu_757_p1);

assign add_ln434_fu_229_p2 = (16'd512 + select_ln850_fu_217_p3);

assign add_ln700_1_fu_336_p2 = ($signed(16'd1) + $signed(sext_ln850_1_fu_308_p1));

assign add_ln700_2_fu_469_p2 = ($signed(16'd1) + $signed(sext_ln850_2_fu_441_p1));

assign add_ln700_3_fu_602_p2 = ($signed(16'd1) + $signed(sext_ln850_3_fu_574_p1));

assign add_ln700_4_fu_735_p2 = ($signed(16'd1) + $signed(sext_ln850_4_fu_707_p1));

assign add_ln700_fu_203_p2 = ($signed(16'd1) + $signed(sext_ln850_fu_175_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = sext_ln440_fu_822_p1;

assign ap_return_1 = sext_ln440_1_fu_826_p1;

assign ap_return_2 = sext_ln440_2_fu_830_p1;

assign ap_return_3 = sext_ln440_3_fu_834_p1;

assign ap_return_4 = sext_ln440_4_fu_838_p1;

assign icmp_ln438_1_fu_404_p2 = ((tmp_7_fu_394_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln438_2_fu_537_p2 = ((tmp_10_fu_527_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln438_3_fu_670_p2 = ((tmp_12_fu_660_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln438_4_fu_803_p2 = ((tmp_14_fu_793_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln438_fu_271_p2 = ((tmp_3_fu_261_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln850_1_fu_312_p2 = (($signed(shl_ln1118_1_fu_290_p3) < $signed(28'd268435449)) ? 1'b1 : 1'b0);

assign icmp_ln850_2_fu_445_p2 = (($signed(shl_ln1118_2_fu_423_p3) < $signed(28'd268435449)) ? 1'b1 : 1'b0);

assign icmp_ln850_3_fu_578_p2 = (($signed(shl_ln1118_3_fu_556_p3) < $signed(28'd268435449)) ? 1'b1 : 1'b0);

assign icmp_ln850_4_fu_711_p2 = (($signed(shl_ln1118_4_fu_689_p3) < $signed(28'd268435449)) ? 1'b1 : 1'b0);

assign icmp_ln850_fu_179_p2 = (($signed(shl_ln_fu_157_p3) < $signed(28'd268435449)) ? 1'b1 : 1'b0);

assign icmp_ln851_1_fu_330_p2 = ((p_Result_2_1_fu_322_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_2_fu_463_p2 = ((p_Result_2_2_fu_455_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_3_fu_596_p2 = ((p_Result_2_3_fu_588_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_4_fu_729_p2 = ((p_Result_2_4_fu_721_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_197_p2 = ((p_Result_2_fu_189_p3 == 10'd0) ? 1'b1 : 1'b0);

assign p_Result_2_1_fu_322_p3 = {{trunc_ln851_1_fu_318_p1}, {7'd0}};

assign p_Result_2_2_fu_455_p3 = {{trunc_ln851_2_fu_451_p1}, {7'd0}};

assign p_Result_2_3_fu_588_p3 = {{trunc_ln851_3_fu_584_p1}, {7'd0}};

assign p_Result_2_4_fu_721_p3 = {{trunc_ln851_4_fu_717_p1}, {7'd0}};

assign p_Result_2_fu_189_p3 = {{trunc_ln851_fu_185_p1}, {7'd0}};

assign select_ln436_1_fu_382_p3 = ((tmp_5_fu_374_p3[0:0] === 1'b1) ? 15'd0 : add_ln434_6_fu_368_p2);

assign select_ln436_2_fu_515_p3 = ((tmp_9_fu_507_p3[0:0] === 1'b1) ? 15'd0 : add_ln434_7_fu_501_p2);

assign select_ln436_3_fu_648_p3 = ((tmp_11_fu_640_p3[0:0] === 1'b1) ? 15'd0 : add_ln434_8_fu_634_p2);

assign select_ln436_4_fu_781_p3 = ((tmp_13_fu_773_p3[0:0] === 1'b1) ? 15'd0 : add_ln434_9_fu_767_p2);

assign select_ln436_fu_249_p3 = ((tmp_1_fu_241_p3[0:0] === 1'b1) ? 15'd0 : add_ln434_5_fu_235_p2);

assign select_ln438_1_fu_410_p3 = ((icmp_ln438_1_fu_404_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln436_1_fu_390_p1);

assign select_ln438_2_fu_543_p3 = ((icmp_ln438_2_fu_537_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln436_2_fu_523_p1);

assign select_ln438_3_fu_676_p3 = ((icmp_ln438_3_fu_670_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln436_3_fu_656_p1);

assign select_ln438_4_fu_809_p3 = ((icmp_ln438_4_fu_803_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln436_4_fu_789_p1);

assign select_ln438_fu_277_p3 = ((icmp_ln438_fu_271_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln436_fu_257_p1);

assign select_ln850_1_fu_350_p3 = ((icmp_ln850_1_fu_312_p2[0:0] === 1'b1) ? select_ln851_1_fu_342_p3 : sext_ln850_1_fu_308_p1);

assign select_ln850_2_fu_483_p3 = ((icmp_ln850_2_fu_445_p2[0:0] === 1'b1) ? select_ln851_2_fu_475_p3 : sext_ln850_2_fu_441_p1);

assign select_ln850_3_fu_616_p3 = ((icmp_ln850_3_fu_578_p2[0:0] === 1'b1) ? select_ln851_3_fu_608_p3 : sext_ln850_3_fu_574_p1);

assign select_ln850_4_fu_749_p3 = ((icmp_ln850_4_fu_711_p2[0:0] === 1'b1) ? select_ln851_4_fu_741_p3 : sext_ln850_4_fu_707_p1);

assign select_ln850_fu_217_p3 = ((icmp_ln850_fu_179_p2[0:0] === 1'b1) ? select_ln851_fu_209_p3 : sext_ln850_fu_175_p1);

assign select_ln851_1_fu_342_p3 = ((icmp_ln851_1_fu_330_p2[0:0] === 1'b1) ? sext_ln850_1_fu_308_p1 : add_ln700_1_fu_336_p2);

assign select_ln851_2_fu_475_p3 = ((icmp_ln851_2_fu_463_p2[0:0] === 1'b1) ? sext_ln850_2_fu_441_p1 : add_ln700_2_fu_469_p2);

assign select_ln851_3_fu_608_p3 = ((icmp_ln851_3_fu_596_p2[0:0] === 1'b1) ? sext_ln850_3_fu_574_p1 : add_ln700_3_fu_602_p2);

assign select_ln851_4_fu_741_p3 = ((icmp_ln851_4_fu_729_p2[0:0] === 1'b1) ? sext_ln850_4_fu_707_p1 : add_ln700_4_fu_735_p2);

assign select_ln851_fu_209_p3 = ((icmp_ln851_fu_197_p2[0:0] === 1'b1) ? sext_ln850_fu_175_p1 : add_ln700_fu_203_p2);

assign sext_ln440_1_fu_826_p1 = $signed(tanh_table2_q1);

assign sext_ln440_2_fu_830_p1 = $signed(tanh_table2_q2);

assign sext_ln440_3_fu_834_p1 = $signed(tanh_table2_q3);

assign sext_ln440_4_fu_838_p1 = $signed(tanh_table2_q4);

assign sext_ln440_fu_822_p1 = $signed(tanh_table2_q0);

assign sext_ln850_1_fu_308_p1 = $signed(tmp_2_fu_298_p4);

assign sext_ln850_2_fu_441_p1 = $signed(tmp_4_fu_431_p4);

assign sext_ln850_3_fu_574_p1 = $signed(tmp_6_fu_564_p4);

assign sext_ln850_4_fu_707_p1 = $signed(tmp_8_fu_697_p4);

assign sext_ln850_fu_175_p1 = $signed(tmp_fu_165_p4);

assign shl_ln1118_1_fu_290_p3 = {{data_1_V_read}, {10'd0}};

assign shl_ln1118_2_fu_423_p3 = {{data_2_V_read}, {10'd0}};

assign shl_ln1118_3_fu_556_p3 = {{data_3_V_read}, {10'd0}};

assign shl_ln1118_4_fu_689_p3 = {{data_4_V_read}, {10'd0}};

assign shl_ln_fu_157_p3 = {{data_0_V_read}, {10'd0}};

assign tanh_table2_address0 = zext_ln440_fu_285_p1;

assign tanh_table2_address1 = zext_ln440_1_fu_418_p1;

assign tanh_table2_address2 = zext_ln440_2_fu_551_p1;

assign tanh_table2_address3 = zext_ln440_3_fu_684_p1;

assign tanh_table2_address4 = zext_ln440_4_fu_817_p1;

assign tmp_10_fu_527_p4 = {{select_ln436_2_fu_515_p3[14:10]}};

assign tmp_11_fu_640_p3 = add_ln434_3_fu_628_p2[32'd15];

assign tmp_12_fu_660_p4 = {{select_ln436_3_fu_648_p3[14:10]}};

assign tmp_13_fu_773_p3 = add_ln434_4_fu_761_p2[32'd15];

assign tmp_14_fu_793_p4 = {{select_ln436_4_fu_781_p3[14:10]}};

assign tmp_1_fu_241_p3 = add_ln434_fu_229_p2[32'd15];

assign tmp_2_fu_298_p4 = {{data_1_V_read[17:3]}};

assign tmp_3_fu_261_p4 = {{select_ln436_fu_249_p3[14:10]}};

assign tmp_4_fu_431_p4 = {{data_2_V_read[17:3]}};

assign tmp_5_fu_374_p3 = add_ln434_1_fu_362_p2[32'd15];

assign tmp_6_fu_564_p4 = {{data_3_V_read[17:3]}};

assign tmp_7_fu_394_p4 = {{select_ln436_1_fu_382_p3[14:10]}};

assign tmp_8_fu_697_p4 = {{data_4_V_read[17:3]}};

assign tmp_9_fu_507_p3 = add_ln434_2_fu_495_p2[32'd15];

assign tmp_fu_165_p4 = {{data_0_V_read[17:3]}};

assign trunc_ln434_1_fu_358_p1 = select_ln850_1_fu_350_p3[14:0];

assign trunc_ln434_2_fu_491_p1 = select_ln850_2_fu_483_p3[14:0];

assign trunc_ln434_3_fu_624_p1 = select_ln850_3_fu_616_p3[14:0];

assign trunc_ln434_4_fu_757_p1 = select_ln850_4_fu_749_p3[14:0];

assign trunc_ln434_fu_225_p1 = select_ln850_fu_217_p3[14:0];

assign trunc_ln436_1_fu_390_p1 = select_ln436_1_fu_382_p3[9:0];

assign trunc_ln436_2_fu_523_p1 = select_ln436_2_fu_515_p3[9:0];

assign trunc_ln436_3_fu_656_p1 = select_ln436_3_fu_648_p3[9:0];

assign trunc_ln436_4_fu_789_p1 = select_ln436_4_fu_781_p3[9:0];

assign trunc_ln436_fu_257_p1 = select_ln436_fu_249_p3[9:0];

assign trunc_ln851_1_fu_318_p1 = data_1_V_read[2:0];

assign trunc_ln851_2_fu_451_p1 = data_2_V_read[2:0];

assign trunc_ln851_3_fu_584_p1 = data_3_V_read[2:0];

assign trunc_ln851_4_fu_717_p1 = data_4_V_read[2:0];

assign trunc_ln851_fu_185_p1 = data_0_V_read[2:0];

assign zext_ln440_1_fu_418_p1 = select_ln438_1_fu_410_p3;

assign zext_ln440_2_fu_551_p1 = select_ln438_2_fu_543_p3;

assign zext_ln440_3_fu_684_p1 = select_ln438_3_fu_676_p3;

assign zext_ln440_4_fu_817_p1 = select_ln438_4_fu_809_p3;

assign zext_ln440_fu_285_p1 = select_ln438_fu_277_p3;

endmodule //tanh_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_tanh_config2_s
