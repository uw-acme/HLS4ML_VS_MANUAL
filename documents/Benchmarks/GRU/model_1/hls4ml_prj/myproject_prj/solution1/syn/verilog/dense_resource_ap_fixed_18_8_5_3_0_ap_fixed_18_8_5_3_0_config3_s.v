// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config3_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [17:0] data_0_V_read;
input  [17:0] data_1_V_read;
input  [17:0] data_2_V_read;
input  [17:0] data_3_V_read;
input  [17:0] data_4_V_read;
output  [17:0] ap_return_0;
output  [17:0] ap_return_1;
output  [17:0] ap_return_2;
output  [17:0] ap_return_3;
output  [17:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[17:0] ap_return_0;
reg[17:0] ap_return_1;
reg[17:0] ap_return_2;
reg[17:0] ap_return_3;
reg[17:0] ap_return_4;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [16:0] trunc_ln708_s_reg_750;
reg    ap_block_state1;
wire  signed [27:0] sext_ln1118_14_fu_167_p1;
reg  signed [27:0] sext_ln1118_14_reg_755;
wire   [17:0] add_ln703_5_fu_186_p2;
reg   [17:0] add_ln703_5_reg_762;
wire   [17:0] add_ln703_10_fu_256_p2;
reg   [17:0] add_ln703_10_reg_767;
wire   [17:0] add_ln703_15_fu_295_p2;
reg   [17:0] add_ln703_15_reg_772;
wire   [17:0] add_ln703_20_fu_334_p2;
reg   [17:0] add_ln703_20_reg_777;
reg   [16:0] trunc_ln708_22_reg_782;
wire   [17:0] add_ln703_25_fu_382_p2;
reg   [17:0] add_ln703_25_reg_787;
wire    ap_CS_fsm_state2;
wire  signed [17:0] sext_ln1118_fu_120_p0;
wire  signed [27:0] mul_ln1118_fu_585_p2;
wire  signed [17:0] sext_ln1118_10_fu_133_p0;
wire  signed [26:0] mul_ln1118_9_fu_592_p2;
wire  signed [27:0] mul_ln1118_10_fu_599_p2;
wire  signed [17:0] sext_ln1118_14_fu_167_p0;
wire  signed [27:0] mul_ln1118_11_fu_606_p2;
wire   [17:0] trunc_ln708_5_fu_171_p4;
wire   [17:0] trunc_ln708_4_fu_154_p4;
wire   [17:0] trunc_ln_fu_124_p4;
wire   [17:0] add_ln703_fu_180_p2;
wire  signed [17:0] shl_ln_fu_192_p1;
wire   [26:0] shl_ln_fu_192_p3;
wire  signed [17:0] shl_ln1118_s_fu_204_p1;
wire   [18:0] shl_ln1118_s_fu_204_p3;
wire  signed [27:0] sext_ln1118_17_fu_212_p1;
wire  signed [27:0] sext_ln1118_16_fu_200_p1;
wire   [27:0] add_ln1118_fu_216_p2;
wire  signed [27:0] mul_ln1118_13_fu_613_p2;
wire  signed [27:0] mul_ln1118_14_fu_620_p2;
wire   [17:0] trunc_ln708_9_fu_241_p4;
wire   [17:0] trunc_ln708_8_fu_232_p4;
wire   [17:0] trunc_ln708_7_fu_222_p4;
wire   [17:0] add_ln703_9_fu_250_p2;
wire  signed [27:0] mul_ln1118_17_fu_627_p2;
wire  signed [27:0] mul_ln1118_18_fu_634_p2;
wire  signed [27:0] mul_ln1118_19_fu_641_p2;
wire   [17:0] trunc_ln708_11_fu_280_p4;
wire   [17:0] trunc_ln708_10_fu_271_p4;
wire   [17:0] trunc_ln708_3_fu_262_p4;
wire   [17:0] add_ln703_14_fu_289_p2;
wire  signed [27:0] mul_ln1118_22_fu_648_p2;
wire  signed [27:0] mul_ln1118_23_fu_655_p2;
wire  signed [27:0] mul_ln1118_24_fu_662_p2;
wire   [17:0] trunc_ln708_16_fu_319_p4;
wire   [17:0] trunc_ln708_15_fu_310_p4;
wire   [17:0] trunc_ln708_14_fu_301_p4;
wire   [17:0] add_ln703_19_fu_328_p2;
wire  signed [27:0] mul_ln1118_27_fu_669_p2;
wire  signed [27:0] mul_ln1118_28_fu_676_p2;
wire  signed [27:0] mul_ln1118_29_fu_683_p2;
wire  signed [26:0] mul_ln1118_30_fu_690_p2;
wire   [17:0] trunc_ln708_21_fu_358_p4;
wire   [17:0] trunc_ln708_20_fu_349_p4;
wire   [17:0] trunc_ln708_19_fu_340_p4;
wire   [17:0] add_ln703_24_fu_376_p2;
wire  signed [27:0] mul_ln1118_12_fu_697_p2;
wire  signed [17:0] sext_ln708_fu_388_p1;
wire   [17:0] trunc_ln708_6_fu_395_p4;
wire   [17:0] add_ln703_6_fu_404_p2;
wire   [17:0] add_ln703_7_fu_410_p2;
wire  signed [27:0] mul_ln1118_15_fu_704_p2;
wire  signed [27:0] mul_ln1118_16_fu_710_p2;
wire   [17:0] trunc_ln708_2_fu_430_p4;
wire   [17:0] trunc_ln708_1_fu_421_p4;
wire   [17:0] add_ln703_11_fu_439_p2;
wire   [17:0] add_ln703_12_fu_445_p2;
wire  signed [27:0] mul_ln1118_20_fu_717_p2;
wire  signed [27:0] mul_ln1118_21_fu_723_p2;
wire   [17:0] trunc_ln708_13_fu_465_p4;
wire   [17:0] trunc_ln708_12_fu_456_p4;
wire   [17:0] add_ln703_16_fu_474_p2;
wire   [17:0] add_ln703_17_fu_480_p2;
wire  signed [27:0] mul_ln1118_25_fu_730_p2;
wire  signed [27:0] mul_ln1118_26_fu_736_p2;
wire   [17:0] trunc_ln708_18_fu_500_p4;
wire   [17:0] trunc_ln708_17_fu_491_p4;
wire   [17:0] add_ln703_21_fu_509_p2;
wire   [17:0] add_ln703_22_fu_515_p2;
wire  signed [27:0] mul_ln1118_31_fu_743_p2;
wire  signed [17:0] sext_ln708_1_fu_526_p1;
wire   [17:0] trunc_ln708_23_fu_529_p4;
wire   [17:0] add_ln703_26_fu_538_p2;
wire   [17:0] add_ln703_27_fu_544_p2;
wire   [17:0] add_ln703_8_fu_416_p2;
wire   [17:0] add_ln703_13_fu_451_p2;
wire   [17:0] add_ln703_18_fu_486_p2;
wire   [17:0] add_ln703_23_fu_521_p2;
wire   [17:0] add_ln703_28_fu_550_p2;
wire  signed [17:0] mul_ln1118_fu_585_p0;
wire  signed [27:0] sext_ln1118_fu_120_p1;
wire  signed [9:0] mul_ln1118_fu_585_p1;
wire  signed [8:0] mul_ln1118_9_fu_592_p1;
wire  signed [17:0] mul_ln1118_10_fu_599_p0;
wire  signed [27:0] sext_ln1118_12_fu_150_p1;
wire   [12:0] mul_ln1118_10_fu_599_p1;
wire   [10:0] mul_ln1118_11_fu_606_p1;
wire  signed [17:0] mul_ln1118_13_fu_613_p0;
wire  signed [27:0] sext_ln1118_10_fu_133_p1;
wire  signed [10:0] mul_ln1118_13_fu_613_p1;
wire  signed [17:0] mul_ln1118_14_fu_620_p0;
wire  signed [11:0] mul_ln1118_14_fu_620_p1;
wire  signed [17:0] mul_ln1118_17_fu_627_p0;
wire  signed [10:0] mul_ln1118_17_fu_627_p1;
wire  signed [17:0] mul_ln1118_18_fu_634_p0;
wire   [10:0] mul_ln1118_18_fu_634_p1;
wire  signed [17:0] mul_ln1118_19_fu_641_p0;
wire   [11:0] mul_ln1118_19_fu_641_p1;
wire  signed [17:0] mul_ln1118_22_fu_648_p0;
wire   [11:0] mul_ln1118_22_fu_648_p1;
wire  signed [17:0] mul_ln1118_23_fu_655_p0;
wire   [12:0] mul_ln1118_23_fu_655_p1;
wire  signed [17:0] mul_ln1118_24_fu_662_p0;
wire  signed [11:0] mul_ln1118_24_fu_662_p1;
wire  signed [17:0] mul_ln1118_27_fu_669_p0;
wire   [11:0] mul_ln1118_27_fu_669_p1;
wire  signed [17:0] mul_ln1118_28_fu_676_p0;
wire  signed [10:0] mul_ln1118_28_fu_676_p1;
wire  signed [17:0] mul_ln1118_29_fu_683_p0;
wire  signed [11:0] mul_ln1118_29_fu_683_p1;
wire   [8:0] mul_ln1118_30_fu_690_p1;
wire  signed [17:0] mul_ln1118_12_fu_697_p0;
wire  signed [27:0] sext_ln1118_15_fu_391_p1;
wire   [11:0] mul_ln1118_12_fu_697_p1;
wire  signed [17:0] mul_ln1118_15_fu_704_p0;
wire   [10:0] mul_ln1118_15_fu_704_p1;
wire  signed [17:0] mul_ln1118_16_fu_710_p0;
wire  signed [10:0] mul_ln1118_16_fu_710_p1;
wire  signed [17:0] mul_ln1118_20_fu_717_p0;
wire   [9:0] mul_ln1118_20_fu_717_p1;
wire  signed [17:0] mul_ln1118_21_fu_723_p0;
wire   [11:0] mul_ln1118_21_fu_723_p1;
wire  signed [17:0] mul_ln1118_25_fu_730_p0;
wire   [11:0] mul_ln1118_25_fu_730_p1;
wire  signed [17:0] mul_ln1118_26_fu_736_p0;
wire  signed [12:0] mul_ln1118_26_fu_736_p1;
wire  signed [17:0] mul_ln1118_31_fu_743_p0;
wire  signed [10:0] mul_ln1118_31_fu_743_p1;
reg   [17:0] ap_return_0_preg;
reg   [17:0] ap_return_1_preg;
reg   [17:0] ap_return_2_preg;
reg   [17:0] ap_return_3_preg;
reg   [17:0] ap_return_4_preg;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_return_0_preg = 18'd0;
#0 ap_return_1_preg = 18'd0;
#0 ap_return_2_preg = 18'd0;
#0 ap_return_3_preg = 18'd0;
#0 ap_return_4_preg = 18'd0;
end

myproject_mul_mul_18s_10s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_10s_28_1_1_U206(
    .din0(mul_ln1118_fu_585_p0),
    .din1(mul_ln1118_fu_585_p1),
    .dout(mul_ln1118_fu_585_p2)
);

myproject_mul_mul_18s_9s_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 27 ))
myproject_mul_mul_18s_9s_27_1_1_U207(
    .din0(data_1_V_read),
    .din1(mul_ln1118_9_fu_592_p1),
    .dout(mul_ln1118_9_fu_592_p2)
);

myproject_mul_mul_18s_13ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_13ns_28_1_1_U208(
    .din0(mul_ln1118_10_fu_599_p0),
    .din1(mul_ln1118_10_fu_599_p1),
    .dout(mul_ln1118_10_fu_599_p2)
);

myproject_mul_mul_18s_11ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_11ns_28_1_1_U209(
    .din0(data_3_V_read),
    .din1(mul_ln1118_11_fu_606_p1),
    .dout(mul_ln1118_11_fu_606_p2)
);

myproject_mul_mul_18s_11s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_11s_28_1_1_U210(
    .din0(mul_ln1118_13_fu_613_p0),
    .din1(mul_ln1118_13_fu_613_p1),
    .dout(mul_ln1118_13_fu_613_p2)
);

myproject_mul_mul_18s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_12s_28_1_1_U211(
    .din0(mul_ln1118_14_fu_620_p0),
    .din1(mul_ln1118_14_fu_620_p1),
    .dout(mul_ln1118_14_fu_620_p2)
);

myproject_mul_mul_18s_11s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_11s_28_1_1_U212(
    .din0(mul_ln1118_17_fu_627_p0),
    .din1(mul_ln1118_17_fu_627_p1),
    .dout(mul_ln1118_17_fu_627_p2)
);

myproject_mul_mul_18s_11ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_11ns_28_1_1_U213(
    .din0(mul_ln1118_18_fu_634_p0),
    .din1(mul_ln1118_18_fu_634_p1),
    .dout(mul_ln1118_18_fu_634_p2)
);

myproject_mul_mul_18s_12ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_12ns_28_1_1_U214(
    .din0(mul_ln1118_19_fu_641_p0),
    .din1(mul_ln1118_19_fu_641_p1),
    .dout(mul_ln1118_19_fu_641_p2)
);

myproject_mul_mul_18s_12ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_12ns_28_1_1_U215(
    .din0(mul_ln1118_22_fu_648_p0),
    .din1(mul_ln1118_22_fu_648_p1),
    .dout(mul_ln1118_22_fu_648_p2)
);

myproject_mul_mul_18s_13ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_13ns_28_1_1_U216(
    .din0(mul_ln1118_23_fu_655_p0),
    .din1(mul_ln1118_23_fu_655_p1),
    .dout(mul_ln1118_23_fu_655_p2)
);

myproject_mul_mul_18s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_12s_28_1_1_U217(
    .din0(mul_ln1118_24_fu_662_p0),
    .din1(mul_ln1118_24_fu_662_p1),
    .dout(mul_ln1118_24_fu_662_p2)
);

myproject_mul_mul_18s_12ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_12ns_28_1_1_U218(
    .din0(mul_ln1118_27_fu_669_p0),
    .din1(mul_ln1118_27_fu_669_p1),
    .dout(mul_ln1118_27_fu_669_p2)
);

myproject_mul_mul_18s_11s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_11s_28_1_1_U219(
    .din0(mul_ln1118_28_fu_676_p0),
    .din1(mul_ln1118_28_fu_676_p1),
    .dout(mul_ln1118_28_fu_676_p2)
);

myproject_mul_mul_18s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_12s_28_1_1_U220(
    .din0(mul_ln1118_29_fu_683_p0),
    .din1(mul_ln1118_29_fu_683_p1),
    .dout(mul_ln1118_29_fu_683_p2)
);

myproject_mul_mul_18s_9ns_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 27 ))
myproject_mul_mul_18s_9ns_27_1_1_U221(
    .din0(data_3_V_read),
    .din1(mul_ln1118_30_fu_690_p1),
    .dout(mul_ln1118_30_fu_690_p2)
);

myproject_mul_mul_18s_12ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_12ns_28_1_1_U222(
    .din0(mul_ln1118_12_fu_697_p0),
    .din1(mul_ln1118_12_fu_697_p1),
    .dout(mul_ln1118_12_fu_697_p2)
);

myproject_mul_mul_18s_11ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_11ns_28_1_1_U223(
    .din0(mul_ln1118_15_fu_704_p0),
    .din1(mul_ln1118_15_fu_704_p1),
    .dout(mul_ln1118_15_fu_704_p2)
);

myproject_mul_mul_18s_11s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_11s_28_1_1_U224(
    .din0(mul_ln1118_16_fu_710_p0),
    .din1(mul_ln1118_16_fu_710_p1),
    .dout(mul_ln1118_16_fu_710_p2)
);

myproject_mul_mul_18s_10ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_10ns_28_1_1_U225(
    .din0(mul_ln1118_20_fu_717_p0),
    .din1(mul_ln1118_20_fu_717_p1),
    .dout(mul_ln1118_20_fu_717_p2)
);

myproject_mul_mul_18s_12ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_12ns_28_1_1_U226(
    .din0(mul_ln1118_21_fu_723_p0),
    .din1(mul_ln1118_21_fu_723_p1),
    .dout(mul_ln1118_21_fu_723_p2)
);

myproject_mul_mul_18s_12ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_12ns_28_1_1_U227(
    .din0(mul_ln1118_25_fu_730_p0),
    .din1(mul_ln1118_25_fu_730_p1),
    .dout(mul_ln1118_25_fu_730_p2)
);

myproject_mul_mul_18s_13s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_13s_28_1_1_U228(
    .din0(mul_ln1118_26_fu_736_p0),
    .din1(mul_ln1118_26_fu_736_p1),
    .dout(mul_ln1118_26_fu_736_p2)
);

myproject_mul_mul_18s_11s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 28 ))
myproject_mul_mul_18s_11s_28_1_1_U229(
    .din0(mul_ln1118_31_fu_743_p0),
    .din1(mul_ln1118_31_fu_743_p1),
    .dout(mul_ln1118_31_fu_743_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 18'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_return_0_preg <= add_ln703_8_fu_416_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 18'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_return_1_preg <= add_ln703_13_fu_451_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 18'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_return_2_preg <= add_ln703_18_fu_486_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 18'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_return_3_preg <= add_ln703_23_fu_521_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 18'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_return_4_preg <= add_ln703_28_fu_550_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln703_10_reg_767 <= add_ln703_10_fu_256_p2;
        add_ln703_15_reg_772 <= add_ln703_15_fu_295_p2;
        add_ln703_20_reg_777 <= add_ln703_20_fu_334_p2;
        add_ln703_25_reg_787 <= add_ln703_25_fu_382_p2;
        add_ln703_5_reg_762 <= add_ln703_5_fu_186_p2;
        sext_ln1118_14_reg_755 <= sext_ln1118_14_fu_167_p1;
        trunc_ln708_22_reg_782 <= {{mul_ln1118_30_fu_690_p2[26:10]}};
        trunc_ln708_s_reg_750 <= {{mul_ln1118_9_fu_592_p2[26:10]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_return_0 = add_ln703_8_fu_416_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_return_1 = add_ln703_13_fu_451_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_return_2 = add_ln703_18_fu_486_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_return_3 = add_ln703_23_fu_521_p2;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_return_4 = add_ln703_28_fu_550_p2;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1118_fu_216_p2 = ($signed(sext_ln1118_17_fu_212_p1) + $signed(sext_ln1118_16_fu_200_p1));

assign add_ln703_10_fu_256_p2 = (trunc_ln708_7_fu_222_p4 + add_ln703_9_fu_250_p2);

assign add_ln703_11_fu_439_p2 = (trunc_ln708_2_fu_430_p4 + 18'd602);

assign add_ln703_12_fu_445_p2 = (trunc_ln708_1_fu_421_p4 + add_ln703_11_fu_439_p2);

assign add_ln703_13_fu_451_p2 = (add_ln703_10_reg_767 + add_ln703_12_fu_445_p2);

assign add_ln703_14_fu_289_p2 = (trunc_ln708_11_fu_280_p4 + trunc_ln708_10_fu_271_p4);

assign add_ln703_15_fu_295_p2 = (trunc_ln708_3_fu_262_p4 + add_ln703_14_fu_289_p2);

assign add_ln703_16_fu_474_p2 = (trunc_ln708_13_fu_465_p4 + 18'd201);

assign add_ln703_17_fu_480_p2 = (trunc_ln708_12_fu_456_p4 + add_ln703_16_fu_474_p2);

assign add_ln703_18_fu_486_p2 = (add_ln703_15_reg_772 + add_ln703_17_fu_480_p2);

assign add_ln703_19_fu_328_p2 = (trunc_ln708_16_fu_319_p4 + trunc_ln708_15_fu_310_p4);

assign add_ln703_20_fu_334_p2 = (trunc_ln708_14_fu_301_p4 + add_ln703_19_fu_328_p2);

assign add_ln703_21_fu_509_p2 = ($signed(trunc_ln708_18_fu_500_p4) + $signed(18'd261940));

assign add_ln703_22_fu_515_p2 = (trunc_ln708_17_fu_491_p4 + add_ln703_21_fu_509_p2);

assign add_ln703_23_fu_521_p2 = (add_ln703_20_reg_777 + add_ln703_22_fu_515_p2);

assign add_ln703_24_fu_376_p2 = (trunc_ln708_21_fu_358_p4 + trunc_ln708_20_fu_349_p4);

assign add_ln703_25_fu_382_p2 = (trunc_ln708_19_fu_340_p4 + add_ln703_24_fu_376_p2);

assign add_ln703_26_fu_538_p2 = ($signed(sext_ln708_1_fu_526_p1) + $signed(18'd397));

assign add_ln703_27_fu_544_p2 = (trunc_ln708_23_fu_529_p4 + add_ln703_26_fu_538_p2);

assign add_ln703_28_fu_550_p2 = (add_ln703_25_reg_787 + add_ln703_27_fu_544_p2);

assign add_ln703_5_fu_186_p2 = (trunc_ln_fu_124_p4 + add_ln703_fu_180_p2);

assign add_ln703_6_fu_404_p2 = ($signed(sext_ln708_fu_388_p1) + $signed(18'd208));

assign add_ln703_7_fu_410_p2 = (trunc_ln708_6_fu_395_p4 + add_ln703_6_fu_404_p2);

assign add_ln703_8_fu_416_p2 = (add_ln703_5_reg_762 + add_ln703_7_fu_410_p2);

assign add_ln703_9_fu_250_p2 = (trunc_ln708_9_fu_241_p4 + trunc_ln708_8_fu_232_p4);

assign add_ln703_fu_180_p2 = (trunc_ln708_5_fu_171_p4 + trunc_ln708_4_fu_154_p4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign mul_ln1118_10_fu_599_p0 = sext_ln1118_12_fu_150_p1;

assign mul_ln1118_10_fu_599_p1 = 28'd2338;

assign mul_ln1118_11_fu_606_p1 = 28'd530;

assign mul_ln1118_12_fu_697_p0 = sext_ln1118_15_fu_391_p1;

assign mul_ln1118_12_fu_697_p1 = 28'd1582;

assign mul_ln1118_13_fu_613_p0 = sext_ln1118_10_fu_133_p1;

assign mul_ln1118_13_fu_613_p1 = 28'd268434576;

assign mul_ln1118_14_fu_620_p0 = sext_ln1118_12_fu_150_p1;

assign mul_ln1118_14_fu_620_p1 = 28'd268434024;

assign mul_ln1118_15_fu_704_p0 = sext_ln1118_14_reg_755;

assign mul_ln1118_15_fu_704_p1 = 28'd628;

assign mul_ln1118_16_fu_710_p0 = sext_ln1118_15_fu_391_p1;

assign mul_ln1118_16_fu_710_p1 = 28'd268434465;

assign mul_ln1118_17_fu_627_p0 = sext_ln1118_fu_120_p1;

assign mul_ln1118_17_fu_627_p1 = 28'd268434808;

assign mul_ln1118_18_fu_634_p0 = sext_ln1118_10_fu_133_p1;

assign mul_ln1118_18_fu_634_p1 = 28'd750;

assign mul_ln1118_19_fu_641_p0 = sext_ln1118_12_fu_150_p1;

assign mul_ln1118_19_fu_641_p1 = 28'd1633;

assign mul_ln1118_20_fu_717_p0 = sext_ln1118_14_reg_755;

assign mul_ln1118_20_fu_717_p1 = 28'd335;

assign mul_ln1118_21_fu_723_p0 = sext_ln1118_15_fu_391_p1;

assign mul_ln1118_21_fu_723_p1 = 28'd1894;

assign mul_ln1118_22_fu_648_p0 = sext_ln1118_fu_120_p1;

assign mul_ln1118_22_fu_648_p1 = 28'd1093;

assign mul_ln1118_23_fu_655_p0 = sext_ln1118_10_fu_133_p1;

assign mul_ln1118_23_fu_655_p1 = 28'd3280;

assign mul_ln1118_24_fu_662_p0 = sext_ln1118_12_fu_150_p1;

assign mul_ln1118_24_fu_662_p1 = 28'd268434276;

assign mul_ln1118_25_fu_730_p0 = sext_ln1118_14_reg_755;

assign mul_ln1118_25_fu_730_p1 = 28'd1091;

assign mul_ln1118_26_fu_736_p0 = sext_ln1118_15_fu_391_p1;

assign mul_ln1118_26_fu_736_p1 = 28'd268433059;

assign mul_ln1118_27_fu_669_p0 = sext_ln1118_fu_120_p1;

assign mul_ln1118_27_fu_669_p1 = 28'd1759;

assign mul_ln1118_28_fu_676_p0 = sext_ln1118_10_fu_133_p1;

assign mul_ln1118_28_fu_676_p1 = 28'd268434618;

assign mul_ln1118_29_fu_683_p0 = sext_ln1118_12_fu_150_p1;

assign mul_ln1118_29_fu_683_p1 = 28'd268434074;

assign mul_ln1118_30_fu_690_p1 = 27'd178;

assign mul_ln1118_31_fu_743_p0 = sext_ln1118_15_fu_391_p1;

assign mul_ln1118_31_fu_743_p1 = 28'd268434793;

assign mul_ln1118_9_fu_592_p1 = 27'd134217499;

assign mul_ln1118_fu_585_p0 = sext_ln1118_fu_120_p1;

assign mul_ln1118_fu_585_p1 = 28'd268435060;

assign sext_ln1118_10_fu_133_p0 = data_1_V_read;

assign sext_ln1118_10_fu_133_p1 = sext_ln1118_10_fu_133_p0;

assign sext_ln1118_12_fu_150_p1 = $signed(data_2_V_read);

assign sext_ln1118_14_fu_167_p0 = data_3_V_read;

assign sext_ln1118_14_fu_167_p1 = sext_ln1118_14_fu_167_p0;

assign sext_ln1118_15_fu_391_p1 = $signed(data_4_V_read);

assign sext_ln1118_16_fu_200_p1 = $signed(shl_ln_fu_192_p3);

assign sext_ln1118_17_fu_212_p1 = $signed(shl_ln1118_s_fu_204_p3);

assign sext_ln1118_fu_120_p0 = data_0_V_read;

assign sext_ln1118_fu_120_p1 = sext_ln1118_fu_120_p0;

assign sext_ln708_1_fu_526_p1 = $signed(trunc_ln708_22_reg_782);

assign sext_ln708_fu_388_p1 = $signed(trunc_ln708_s_reg_750);

assign shl_ln1118_s_fu_204_p1 = data_0_V_read;

assign shl_ln1118_s_fu_204_p3 = {{shl_ln1118_s_fu_204_p1}, {1'd0}};

assign shl_ln_fu_192_p1 = data_0_V_read;

assign shl_ln_fu_192_p3 = {{shl_ln_fu_192_p1}, {9'd0}};

assign trunc_ln708_10_fu_271_p4 = {{mul_ln1118_18_fu_634_p2[27:10]}};

assign trunc_ln708_11_fu_280_p4 = {{mul_ln1118_19_fu_641_p2[27:10]}};

assign trunc_ln708_12_fu_456_p4 = {{mul_ln1118_20_fu_717_p2[27:10]}};

assign trunc_ln708_13_fu_465_p4 = {{mul_ln1118_21_fu_723_p2[27:10]}};

assign trunc_ln708_14_fu_301_p4 = {{mul_ln1118_22_fu_648_p2[27:10]}};

assign trunc_ln708_15_fu_310_p4 = {{mul_ln1118_23_fu_655_p2[27:10]}};

assign trunc_ln708_16_fu_319_p4 = {{mul_ln1118_24_fu_662_p2[27:10]}};

assign trunc_ln708_17_fu_491_p4 = {{mul_ln1118_25_fu_730_p2[27:10]}};

assign trunc_ln708_18_fu_500_p4 = {{mul_ln1118_26_fu_736_p2[27:10]}};

assign trunc_ln708_19_fu_340_p4 = {{mul_ln1118_27_fu_669_p2[27:10]}};

assign trunc_ln708_1_fu_421_p4 = {{mul_ln1118_15_fu_704_p2[27:10]}};

assign trunc_ln708_20_fu_349_p4 = {{mul_ln1118_28_fu_676_p2[27:10]}};

assign trunc_ln708_21_fu_358_p4 = {{mul_ln1118_29_fu_683_p2[27:10]}};

assign trunc_ln708_23_fu_529_p4 = {{mul_ln1118_31_fu_743_p2[27:10]}};

assign trunc_ln708_2_fu_430_p4 = {{mul_ln1118_16_fu_710_p2[27:10]}};

assign trunc_ln708_3_fu_262_p4 = {{mul_ln1118_17_fu_627_p2[27:10]}};

assign trunc_ln708_4_fu_154_p4 = {{mul_ln1118_10_fu_599_p2[27:10]}};

assign trunc_ln708_5_fu_171_p4 = {{mul_ln1118_11_fu_606_p2[27:10]}};

assign trunc_ln708_6_fu_395_p4 = {{mul_ln1118_12_fu_697_p2[27:10]}};

assign trunc_ln708_7_fu_222_p4 = {{add_ln1118_fu_216_p2[27:10]}};

assign trunc_ln708_8_fu_232_p4 = {{mul_ln1118_13_fu_613_p2[27:10]}};

assign trunc_ln708_9_fu_241_p4 = {{mul_ln1118_14_fu_620_p2[27:10]}};

assign trunc_ln_fu_124_p4 = {{mul_ln1118_fu_585_p2[27:10]}};

endmodule //dense_resource_ap_fixed_18_8_5_3_0_ap_fixed_18_8_5_3_0_config3_s
