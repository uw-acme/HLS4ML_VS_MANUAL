// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config8_s_HH_
#define _softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config8_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_mul_mul_17ns_18s_26_1_1.h"
#include "softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config8_s_exp_table1.h"
#include "softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config8_s_invert_table2.h"

namespace ap_rtl {

struct softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config8_s : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_0_V_read;
    sc_in< sc_lv<16> > data_1_V_read;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_out< sc_lv<16> > res_0_V;
    sc_out< sc_logic > res_0_V_ap_vld;
    sc_out< sc_lv<16> > res_1_V;
    sc_out< sc_logic > res_1_V_ap_vld;
    sc_out< sc_lv<16> > res_2_V;
    sc_out< sc_logic > res_2_V_ap_vld;


    // Module declarations
    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config8_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config8_s);

    ~softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config8_s();

    sc_trace_file* mVcdFile;

    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config8_s_exp_table1* exp_table1_U;
    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_softmax_config8_s_invert_table2* invert_table2_U;
    myproject_mul_mul_17ns_18s_26_1_1<1,1,17,18,26>* myproject_mul_mul_17ns_18s_26_1_1_U4517;
    myproject_mul_mul_17ns_18s_26_1_1<1,1,17,18,26>* myproject_mul_mul_17ns_18s_26_1_1_U4518;
    myproject_mul_mul_17ns_18s_26_1_1<1,1,17,18,26>* myproject_mul_mul_17ns_18s_26_1_1_U4519;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > exp_table1_address0;
    sc_signal< sc_logic > exp_table1_ce0;
    sc_signal< sc_lv<17> > exp_table1_q0;
    sc_signal< sc_lv<10> > exp_table1_address1;
    sc_signal< sc_logic > exp_table1_ce1;
    sc_signal< sc_lv<17> > exp_table1_q1;
    sc_signal< sc_lv<10> > exp_table1_address2;
    sc_signal< sc_logic > exp_table1_ce2;
    sc_signal< sc_lv<17> > exp_table1_q2;
    sc_signal< sc_lv<10> > invert_table2_address0;
    sc_signal< sc_logic > invert_table2_ce0;
    sc_signal< sc_lv<18> > invert_table2_q0;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_674;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_679;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_684;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln255_fu_389_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln255_1_fu_428_p1;
    sc_signal< sc_lv<64> > zext_ln255_2_fu_467_p1;
    sc_signal< sc_lv<64> > zext_ln265_fu_590_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<16> > icmp_ln1496_fu_155_p0;
    sc_signal< sc_lv<16> > icmp_ln1496_fu_155_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_155_p2;
    sc_signal< sc_lv<16> > select_ln65_fu_161_p1;
    sc_signal< sc_lv<16> > select_ln65_fu_161_p2;
    sc_signal< sc_lv<16> > select_ln65_fu_161_p3;
    sc_signal< sc_lv<16> > icmp_ln1496_1_fu_169_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_1_fu_169_p2;
    sc_signal< sc_lv<16> > x_max_V_fu_175_p1;
    sc_signal< sc_lv<16> > sext_ln703_fu_183_p0;
    sc_signal< sc_lv<16> > x_max_V_fu_175_p3;
    sc_signal< sc_lv<17> > sext_ln703_fu_183_p1;
    sc_signal< sc_lv<17> > sext_ln703_1_fu_187_p1;
    sc_signal< sc_lv<17> > sub_ln1193_fu_191_p2;
    sc_signal< sc_lv<1> > tmp_360_fu_205_p3;
    sc_signal< sc_lv<1> > tmp_359_fu_197_p3;
    sc_signal< sc_lv<1> > xor_ln786_fu_213_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_231_p2;
    sc_signal< sc_lv<16> > sext_ln703_2_fu_243_p0;
    sc_signal< sc_lv<17> > sext_ln703_2_fu_243_p1;
    sc_signal< sc_lv<17> > sub_ln1193_1_fu_247_p2;
    sc_signal< sc_lv<1> > tmp_362_fu_261_p3;
    sc_signal< sc_lv<1> > tmp_361_fu_253_p3;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_269_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_287_p2;
    sc_signal< sc_lv<16> > sext_ln703_3_fu_299_p0;
    sc_signal< sc_lv<17> > sext_ln703_3_fu_299_p1;
    sc_signal< sc_lv<17> > sub_ln1193_2_fu_303_p2;
    sc_signal< sc_lv<1> > tmp_364_fu_317_p3;
    sc_signal< sc_lv<1> > tmp_363_fu_309_p3;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_325_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_343_p2;
    sc_signal< sc_lv<1> > xor_ln340_3_fu_225_p2;
    sc_signal< sc_lv<10> > tmp_fu_355_p4;
    sc_signal< sc_lv<1> > and_ln786_fu_219_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_237_p2;
    sc_signal< sc_lv<10> > select_ln340_fu_365_p3;
    sc_signal< sc_lv<10> > select_ln388_fu_373_p3;
    sc_signal< sc_lv<10> > y_V_fu_381_p3;
    sc_signal< sc_lv<1> > xor_ln340_4_fu_281_p2;
    sc_signal< sc_lv<10> > tmp_2_fu_394_p4;
    sc_signal< sc_lv<1> > and_ln786_1_fu_275_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_293_p2;
    sc_signal< sc_lv<10> > select_ln340_2_fu_404_p3;
    sc_signal< sc_lv<10> > select_ln388_1_fu_412_p3;
    sc_signal< sc_lv<10> > y_V_1_fu_420_p3;
    sc_signal< sc_lv<1> > xor_ln340_5_fu_337_p2;
    sc_signal< sc_lv<10> > tmp_4_fu_433_p4;
    sc_signal< sc_lv<1> > and_ln786_2_fu_331_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_349_p2;
    sc_signal< sc_lv<10> > select_ln340_4_fu_443_p3;
    sc_signal< sc_lv<10> > select_ln388_2_fu_451_p3;
    sc_signal< sc_lv<10> > y_V_2_fu_459_p3;
    sc_signal< sc_lv<18> > zext_ln36_2_fu_480_p1;
    sc_signal< sc_lv<18> > zext_ln36_1_fu_476_p1;
    sc_signal< sc_lv<18> > ret_V_fu_484_p2;
    sc_signal< sc_lv<19> > rhs_V_fu_494_p1;
    sc_signal< sc_lv<19> > lhs_V_fu_490_p1;
    sc_signal< sc_lv<19> > ret_V_1_fu_498_p2;
    sc_signal< sc_lv<18> > zext_ln36_fu_472_p1;
    sc_signal< sc_lv<18> > p_Val2_9_fu_512_p2;
    sc_signal< sc_lv<1> > p_Result_7_fu_518_p3;
    sc_signal< sc_lv<1> > p_Result_s_fu_504_p3;
    sc_signal< sc_lv<1> > xor_ln786_3_fu_526_p2;
    sc_signal< sc_lv<1> > xor_ln340_7_fu_544_p2;
    sc_signal< sc_lv<1> > xor_ln340_6_fu_538_p2;
    sc_signal< sc_lv<10> > tmp_6_fu_556_p4;
    sc_signal< sc_lv<1> > underflow_fu_532_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_550_p2;
    sc_signal< sc_lv<10> > select_ln340_6_fu_566_p3;
    sc_signal< sc_lv<10> > select_ln388_3_fu_574_p3;
    sc_signal< sc_lv<10> > y_V_3_fu_582_p3;
    sc_signal< sc_lv<26> > mul_ln1118_fu_638_p2;
    sc_signal< sc_lv<26> > mul_ln1118_1_fu_645_p2;
    sc_signal< sc_lv<26> > mul_ln1118_2_fu_652_p2;
    sc_signal< sc_lv<17> > mul_ln1118_fu_638_p0;
    sc_signal< sc_lv<18> > mul_ln1118_fu_638_p1;
    sc_signal< sc_lv<26> > sext_ln1116_fu_595_p1;
    sc_signal< sc_lv<17> > mul_ln1118_1_fu_645_p0;
    sc_signal< sc_lv<18> > mul_ln1118_1_fu_645_p1;
    sc_signal< sc_lv<17> > mul_ln1118_2_fu_652_p0;
    sc_signal< sc_lv<18> > mul_ln1118_2_fu_652_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<26> > mul_ln1118_1_fu_645_p00;
    sc_signal< sc_lv<26> > mul_ln1118_2_fu_652_p00;
    sc_signal< sc_lv<26> > mul_ln1118_fu_638_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln786_1_fu_275_p2();
    void thread_and_ln786_2_fu_331_p2();
    void thread_and_ln786_fu_219_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_exp_table1_address0();
    void thread_exp_table1_address1();
    void thread_exp_table1_address2();
    void thread_exp_table1_ce0();
    void thread_exp_table1_ce1();
    void thread_exp_table1_ce2();
    void thread_icmp_ln1496_1_fu_169_p1();
    void thread_icmp_ln1496_1_fu_169_p2();
    void thread_icmp_ln1496_fu_155_p0();
    void thread_icmp_ln1496_fu_155_p1();
    void thread_icmp_ln1496_fu_155_p2();
    void thread_invert_table2_address0();
    void thread_invert_table2_ce0();
    void thread_lhs_V_fu_490_p1();
    void thread_mul_ln1118_1_fu_645_p0();
    void thread_mul_ln1118_1_fu_645_p00();
    void thread_mul_ln1118_1_fu_645_p1();
    void thread_mul_ln1118_2_fu_652_p0();
    void thread_mul_ln1118_2_fu_652_p00();
    void thread_mul_ln1118_2_fu_652_p1();
    void thread_mul_ln1118_fu_638_p0();
    void thread_mul_ln1118_fu_638_p00();
    void thread_mul_ln1118_fu_638_p1();
    void thread_or_ln340_1_fu_293_p2();
    void thread_or_ln340_2_fu_349_p2();
    void thread_or_ln340_3_fu_550_p2();
    void thread_or_ln340_fu_237_p2();
    void thread_p_Result_7_fu_518_p3();
    void thread_p_Result_s_fu_504_p3();
    void thread_p_Val2_9_fu_512_p2();
    void thread_res_0_V();
    void thread_res_0_V_ap_vld();
    void thread_res_1_V();
    void thread_res_1_V_ap_vld();
    void thread_res_2_V();
    void thread_res_2_V_ap_vld();
    void thread_ret_V_1_fu_498_p2();
    void thread_ret_V_fu_484_p2();
    void thread_rhs_V_fu_494_p1();
    void thread_select_ln340_2_fu_404_p3();
    void thread_select_ln340_4_fu_443_p3();
    void thread_select_ln340_6_fu_566_p3();
    void thread_select_ln340_fu_365_p3();
    void thread_select_ln388_1_fu_412_p3();
    void thread_select_ln388_2_fu_451_p3();
    void thread_select_ln388_3_fu_574_p3();
    void thread_select_ln388_fu_373_p3();
    void thread_select_ln65_fu_161_p1();
    void thread_select_ln65_fu_161_p2();
    void thread_select_ln65_fu_161_p3();
    void thread_sext_ln1116_fu_595_p1();
    void thread_sext_ln703_1_fu_187_p1();
    void thread_sext_ln703_2_fu_243_p0();
    void thread_sext_ln703_2_fu_243_p1();
    void thread_sext_ln703_3_fu_299_p0();
    void thread_sext_ln703_3_fu_299_p1();
    void thread_sext_ln703_fu_183_p0();
    void thread_sext_ln703_fu_183_p1();
    void thread_sub_ln1193_1_fu_247_p2();
    void thread_sub_ln1193_2_fu_303_p2();
    void thread_sub_ln1193_fu_191_p2();
    void thread_tmp_2_fu_394_p4();
    void thread_tmp_359_fu_197_p3();
    void thread_tmp_360_fu_205_p3();
    void thread_tmp_361_fu_253_p3();
    void thread_tmp_362_fu_261_p3();
    void thread_tmp_363_fu_309_p3();
    void thread_tmp_364_fu_317_p3();
    void thread_tmp_4_fu_433_p4();
    void thread_tmp_6_fu_556_p4();
    void thread_tmp_fu_355_p4();
    void thread_underflow_fu_532_p2();
    void thread_x_max_V_fu_175_p1();
    void thread_x_max_V_fu_175_p3();
    void thread_xor_ln340_1_fu_287_p2();
    void thread_xor_ln340_2_fu_343_p2();
    void thread_xor_ln340_3_fu_225_p2();
    void thread_xor_ln340_4_fu_281_p2();
    void thread_xor_ln340_5_fu_337_p2();
    void thread_xor_ln340_6_fu_538_p2();
    void thread_xor_ln340_7_fu_544_p2();
    void thread_xor_ln340_fu_231_p2();
    void thread_xor_ln786_1_fu_269_p2();
    void thread_xor_ln786_2_fu_325_p2();
    void thread_xor_ln786_3_fu_526_p2();
    void thread_xor_ln786_fu_213_p2();
    void thread_y_V_1_fu_420_p3();
    void thread_y_V_2_fu_459_p3();
    void thread_y_V_3_fu_582_p3();
    void thread_y_V_fu_381_p3();
    void thread_zext_ln255_1_fu_428_p1();
    void thread_zext_ln255_2_fu_467_p1();
    void thread_zext_ln255_fu_389_p1();
    void thread_zext_ln265_fu_590_p1();
    void thread_zext_ln36_1_fu_476_p1();
    void thread_zext_ln36_2_fu_480_p1();
    void thread_zext_ln36_fu_472_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
