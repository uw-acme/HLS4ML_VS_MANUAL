-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gru_stack_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V : IN STD_LOGIC_VECTOR (1919 downto 0);
    data_V_ap_vld : IN STD_LOGIC;
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of gru_stack_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv12_F : STD_LOGIC_VECTOR (11 downto 0) := "000000001111";
    constant ap_const_lv32_77F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000011101111111";
    constant ap_const_lv11_77F : STD_LOGIC_VECTOR (10 downto 0) := "11101111111";
    constant ap_const_lv1920_lc_3 : STD_LOGIC_VECTOR (1919 downto
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal h_state_V114_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_18 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal h_state_V114_19 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln487_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal iloop_fu_245_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal iloop_reg_1460 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal data_in_0_V_fu_397_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_0_V_reg_1465 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_1_V_fu_528_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_1_V_reg_1470 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_2_V_fu_659_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_2_V_reg_1475 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_3_V_fu_790_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_3_V_reg_1480 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_4_V_fu_921_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_4_V_reg_1485 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_5_V_fu_1052_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_in_5_V_reg_1490 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start : STD_LOGIC;
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done : STD_LOGIC;
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_idle : STD_LOGIC;
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_ready : STD_LOGIC;
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_reset_state : STD_LOGIC;
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal reset_state_0_reg_152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal iloop_0_reg_166 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state2_ignore_call130 : BOOLEAN;
    signal shl_ln490_1_fu_259_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln_fu_251_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln203_fu_267_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln203_fu_271_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_281_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_21_fu_289_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_20_fu_277_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_169_fu_301_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln203_fu_309_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln203_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln203_1_fu_323_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_3_fu_335_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_170_fu_313_p4 : STD_LOGIC_VECTOR (1919 downto 0);
    signal sub_ln203_2_fu_329_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_fu_341_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_2_fu_357_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_4_fu_365_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_1_fu_349_p3 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_1_fu_371_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_2_fu_375_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_fu_379_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_1_fu_385_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal and_ln203_fu_391_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal or_ln203_fu_402_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_412_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_23_fu_420_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_22_fu_408_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_171_fu_432_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln203_2_fu_440_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln203_1_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln203_5_fu_454_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_7_fu_466_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_172_fu_444_p4 : STD_LOGIC_VECTOR (1919 downto 0);
    signal sub_ln203_6_fu_460_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_3_fu_472_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_5_fu_488_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_8_fu_496_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_4_fu_480_p3 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_3_fu_502_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_4_fu_506_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_2_fu_510_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_3_fu_516_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal and_ln203_1_fu_522_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal add_ln203_fu_533_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_543_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_25_fu_551_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_24_fu_539_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_173_fu_563_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln203_4_fu_571_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln203_2_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln203_9_fu_585_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_11_fu_597_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_174_fu_575_p4 : STD_LOGIC_VECTOR (1919 downto 0);
    signal sub_ln203_10_fu_591_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_6_fu_603_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_8_fu_619_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_12_fu_627_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_7_fu_611_p3 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_5_fu_633_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_6_fu_637_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_4_fu_641_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_5_fu_647_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal and_ln203_2_fu_653_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal add_ln203_1_fu_664_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_674_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_27_fu_682_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_26_fu_670_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_175_fu_694_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln203_6_fu_702_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln203_3_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln203_13_fu_716_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_15_fu_728_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_176_fu_706_p4 : STD_LOGIC_VECTOR (1919 downto 0);
    signal sub_ln203_14_fu_722_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_9_fu_734_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_11_fu_750_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_16_fu_758_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_10_fu_742_p3 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_7_fu_764_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_8_fu_768_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_6_fu_772_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_7_fu_778_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal and_ln203_3_fu_784_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal add_ln203_2_fu_795_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_805_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_29_fu_813_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_28_fu_801_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_177_fu_825_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln203_8_fu_833_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln203_4_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln203_17_fu_847_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_19_fu_859_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_178_fu_837_p4 : STD_LOGIC_VECTOR (1919 downto 0);
    signal sub_ln203_18_fu_853_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_12_fu_865_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_14_fu_881_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_20_fu_889_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_13_fu_873_p3 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_9_fu_895_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_10_fu_899_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_8_fu_903_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_9_fu_909_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal and_ln203_4_fu_915_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal add_ln203_3_fu_926_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_936_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_31_fu_944_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_30_fu_932_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_179_fu_956_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln203_10_fu_964_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln203_5_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln203_21_fu_978_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_23_fu_990_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_180_fu_968_p4 : STD_LOGIC_VECTOR (1919 downto 0);
    signal sub_ln203_22_fu_984_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_15_fu_996_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_17_fu_1012_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_24_fu_1020_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln203_16_fu_1004_p3 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_11_fu_1026_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal zext_ln203_12_fu_1030_p1 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_10_fu_1034_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal lshr_ln203_11_fu_1040_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal and_ln203_5_fu_1046_p2 : STD_LOGIC_VECTOR (1919 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);

    component gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        reset_state : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177 : component gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start,
        ap_done => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done,
        ap_idle => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_idle,
        ap_ready => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_ready,
        reset_state => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_reset_state,
        data_0_V_read => data_in_0_V_reg_1465,
        data_1_V_read => data_in_1_V_reg_1470,
        data_2_V_read => data_in_2_V_reg_1475,
        data_3_V_read => data_in_3_V_reg_1480,
        data_4_V_read => data_in_4_V_reg_1485,
        data_5_V_read => data_in_5_V_reg_1490,
        ap_return_0 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_0,
        ap_return_1 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_1,
        ap_return_2 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_2,
        ap_return_3 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_3,
        ap_return_4 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_4,
        ap_return_5 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_5,
        ap_return_6 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_6,
        ap_return_7 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_7,
        ap_return_8 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_8,
        ap_return_9 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_9,
        ap_return_10 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_10,
        ap_return_11 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_11,
        ap_return_12 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_12,
        ap_return_13 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_13,
        ap_return_14 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_14,
        ap_return_15 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_15,
        ap_return_16 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_16,
        ap_return_17 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_17,
        ap_return_18 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_18,
        ap_return_19 => grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_19);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (data_V_ap_vld = ap_const_logic_0))) and (icmp_ln487_fu_239_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (data_V_ap_vld = ap_const_logic_0))) and (icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_ready = ap_const_logic_1)) then 
                    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    iloop_0_reg_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                iloop_0_reg_166 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done = ap_const_logic_1))) then 
                iloop_0_reg_166 <= iloop_reg_1460;
            end if; 
        end if;
    end process;

    reset_state_0_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reset_state_0_reg_152 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done = ap_const_logic_1))) then 
                reset_state_0_reg_152 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (data_V_ap_vld = ap_const_logic_0))) and (icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                data_in_0_V_reg_1465 <= data_in_0_V_fu_397_p1;
                data_in_1_V_reg_1470 <= data_in_1_V_fu_528_p1;
                data_in_2_V_reg_1475 <= data_in_2_V_fu_659_p1;
                data_in_3_V_reg_1480 <= data_in_3_V_fu_790_p1;
                data_in_4_V_reg_1485 <= data_in_4_V_fu_921_p1;
                data_in_5_V_reg_1490 <= data_in_5_V_fu_1052_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done = ap_const_logic_1))) then
                h_state_V114_0 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_0;
                h_state_V114_1 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_1;
                h_state_V114_10 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_10;
                h_state_V114_11 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_11;
                h_state_V114_12 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_12;
                h_state_V114_13 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_13;
                h_state_V114_14 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_14;
                h_state_V114_15 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_15;
                h_state_V114_16 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_16;
                h_state_V114_17 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_17;
                h_state_V114_18 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_18;
                h_state_V114_19 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_19;
                h_state_V114_2 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_2;
                h_state_V114_3 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_3;
                h_state_V114_4 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_4;
                h_state_V114_5 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_5;
                h_state_V114_6 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_6;
                h_state_V114_7 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_7;
                h_state_V114_8 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_8;
                h_state_V114_9 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (data_V_ap_vld = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                iloop_reg_1460 <= iloop_fu_245_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, data_V_ap_vld, ap_CS_fsm_state2, icmp_ln487_fu_239_p2, grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (data_V_ap_vld = ap_const_logic_0))) and (icmp_ln487_fu_239_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (data_V_ap_vld = ap_const_logic_0))) and (icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln203_1_fu_664_p2 <= std_logic_vector(unsigned(sub_ln203_fu_271_p2) + unsigned(ap_const_lv8_3));
    add_ln203_2_fu_795_p2 <= std_logic_vector(unsigned(sub_ln203_fu_271_p2) + unsigned(ap_const_lv8_4));
    add_ln203_3_fu_926_p2 <= std_logic_vector(unsigned(sub_ln203_fu_271_p2) + unsigned(ap_const_lv8_5));
    add_ln203_fu_533_p2 <= std_logic_vector(unsigned(sub_ln203_fu_271_p2) + unsigned(ap_const_lv8_2));
    and_ln203_1_fu_522_p2 <= (lshr_ln203_3_fu_516_p2 and lshr_ln203_2_fu_510_p2);
    and_ln203_2_fu_653_p2 <= (lshr_ln203_5_fu_647_p2 and lshr_ln203_4_fu_641_p2);
    and_ln203_3_fu_784_p2 <= (lshr_ln203_7_fu_778_p2 and lshr_ln203_6_fu_772_p2);
    and_ln203_4_fu_915_p2 <= (lshr_ln203_9_fu_909_p2 and lshr_ln203_8_fu_903_p2);
    and_ln203_5_fu_1046_p2 <= (lshr_ln203_11_fu_1040_p2 and lshr_ln203_10_fu_1034_p2);
    and_ln203_fu_391_p2 <= (lshr_ln203_fu_379_p2 and lshr_ln203_1_fu_385_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(data_V_ap_vld, icmp_ln487_fu_239_p2)
    begin
                ap_block_state2 <= ((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (data_V_ap_vld = ap_const_logic_0));
    end process;


    ap_block_state2_ignore_call130_assign_proc : process(data_V_ap_vld, icmp_ln487_fu_239_p2)
    begin
                ap_block_state2_ignore_call130 <= ((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (data_V_ap_vld = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, data_V_ap_vld, ap_CS_fsm_state2, icmp_ln487_fu_239_p2)
    begin
        if ((not(((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (data_V_ap_vld = ap_const_logic_0))) and (icmp_ln487_fu_239_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(data_V_ap_vld, ap_CS_fsm_state2, icmp_ln487_fu_239_p2)
    begin
        if ((not(((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (data_V_ap_vld = ap_const_logic_0))) and (icmp_ln487_fu_239_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= h_state_V114_0;
    ap_return_1 <= h_state_V114_1;
    ap_return_10 <= h_state_V114_10;
    ap_return_11 <= h_state_V114_11;
    ap_return_12 <= h_state_V114_12;
    ap_return_13 <= h_state_V114_13;
    ap_return_14 <= h_state_V114_14;
    ap_return_15 <= h_state_V114_15;
    ap_return_16 <= h_state_V114_16;
    ap_return_17 <= h_state_V114_17;
    ap_return_18 <= h_state_V114_18;
    ap_return_19 <= h_state_V114_19;
    ap_return_2 <= h_state_V114_2;
    ap_return_3 <= h_state_V114_3;
    ap_return_4 <= h_state_V114_4;
    ap_return_5 <= h_state_V114_5;
    ap_return_6 <= h_state_V114_6;
    ap_return_7 <= h_state_V114_7;
    ap_return_8 <= h_state_V114_8;
    ap_return_9 <= h_state_V114_9;

    data_V_blk_n_assign_proc : process(data_V_ap_vld, ap_CS_fsm_state2, icmp_ln487_fu_239_p2)
    begin
        if (((icmp_ln487_fu_239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_blk_n <= data_V_ap_vld;
        else 
            data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    data_in_0_V_fu_397_p1 <= and_ln203_fu_391_p2(16 - 1 downto 0);
    data_in_1_V_fu_528_p1 <= and_ln203_1_fu_522_p2(16 - 1 downto 0);
    data_in_2_V_fu_659_p1 <= and_ln203_2_fu_653_p2(16 - 1 downto 0);
    data_in_3_V_fu_790_p1 <= and_ln203_3_fu_784_p2(16 - 1 downto 0);
    data_in_4_V_fu_921_p1 <= and_ln203_4_fu_915_p2(16 - 1 downto 0);
    data_in_5_V_fu_1052_p1 <= and_ln203_5_fu_1046_p2(16 - 1 downto 0);
    empty_20_fu_277_p1 <= sub_ln203_fu_271_p2(7 - 1 downto 0);
    empty_21_fu_289_p2 <= (tmp_fu_281_p3 or ap_const_lv12_F);
    empty_22_fu_408_p1 <= or_ln203_fu_402_p2(7 - 1 downto 0);
    empty_23_fu_420_p2 <= (tmp_1_fu_412_p3 or ap_const_lv12_F);
    empty_24_fu_539_p1 <= add_ln203_fu_533_p2(7 - 1 downto 0);
    empty_25_fu_551_p2 <= (tmp_2_fu_543_p3 or ap_const_lv12_F);
    empty_26_fu_670_p1 <= add_ln203_1_fu_664_p2(7 - 1 downto 0);
    empty_27_fu_682_p2 <= (tmp_3_fu_674_p3 or ap_const_lv12_F);
    empty_28_fu_801_p1 <= add_ln203_2_fu_795_p2(7 - 1 downto 0);
    empty_29_fu_813_p2 <= (tmp_4_fu_805_p3 or ap_const_lv12_F);
    empty_30_fu_932_p1 <= add_ln203_3_fu_926_p2(7 - 1 downto 0);
    empty_31_fu_944_p2 <= (tmp_5_fu_936_p3 or ap_const_lv12_F);
    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg;
    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_reset_state <= reset_state_0_reg_152(0);
    icmp_ln203_1_fu_426_p2 <= "1" when (unsigned(tmp_1_fu_412_p3) > unsigned(empty_23_fu_420_p2)) else "0";
    icmp_ln203_2_fu_557_p2 <= "1" when (unsigned(tmp_2_fu_543_p3) > unsigned(empty_25_fu_551_p2)) else "0";
    icmp_ln203_3_fu_688_p2 <= "1" when (unsigned(tmp_3_fu_674_p3) > unsigned(empty_27_fu_682_p2)) else "0";
    icmp_ln203_4_fu_819_p2 <= "1" when (unsigned(tmp_4_fu_805_p3) > unsigned(empty_29_fu_813_p2)) else "0";
    icmp_ln203_5_fu_950_p2 <= "1" when (unsigned(tmp_5_fu_936_p3) > unsigned(empty_31_fu_944_p2)) else "0";
    icmp_ln203_fu_295_p2 <= "1" when (unsigned(tmp_fu_281_p3) > unsigned(empty_21_fu_289_p2)) else "0";
    icmp_ln487_fu_239_p2 <= "1" when (iloop_0_reg_166 = ap_const_lv5_14) else "0";
    iloop_fu_245_p2 <= std_logic_vector(unsigned(iloop_0_reg_166) + unsigned(ap_const_lv5_1));
    lshr_ln203_10_fu_1034_p2 <= std_logic_vector(shift_right(unsigned(select_ln203_16_fu_1004_p3),to_integer(unsigned('0' & zext_ln203_11_fu_1026_p1(31-1 downto 0)))));
    lshr_ln203_11_fu_1040_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv1920_lc_3),to_integer(unsigned('0' & zext_ln203_12_fu_1030_p1(31-1 downto 0)))));
    lshr_ln203_1_fu_385_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv1920_lc_3),to_integer(unsigned('0' & zext_ln203_2_fu_375_p1(31-1 downto 0)))));
    lshr_ln203_2_fu_510_p2 <= std_logic_vector(shift_right(unsigned(select_ln203_4_fu_480_p3),to_integer(unsigned('0' & zext_ln203_3_fu_502_p1(31-1 downto 0)))));
    lshr_ln203_3_fu_516_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv1920_lc_3),to_integer(unsigned('0' & zext_ln203_4_fu_506_p1(31-1 downto 0)))));
    lshr_ln203_4_fu_641_p2 <= std_logic_vector(shift_right(unsigned(select_ln203_7_fu_611_p3),to_integer(unsigned('0' & zext_ln203_5_fu_633_p1(31-1 downto 0)))));
    lshr_ln203_5_fu_647_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv1920_lc_3),to_integer(unsigned('0' & zext_ln203_6_fu_637_p1(31-1 downto 0)))));
    lshr_ln203_6_fu_772_p2 <= std_logic_vector(shift_right(unsigned(select_ln203_10_fu_742_p3),to_integer(unsigned('0' & zext_ln203_7_fu_764_p1(31-1 downto 0)))));
    lshr_ln203_7_fu_778_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv1920_lc_3),to_integer(unsigned('0' & zext_ln203_8_fu_768_p1(31-1 downto 0)))));
    lshr_ln203_8_fu_903_p2 <= std_logic_vector(shift_right(unsigned(select_ln203_13_fu_873_p3),to_integer(unsigned('0' & zext_ln203_9_fu_895_p1(31-1 downto 0)))));
    lshr_ln203_9_fu_909_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv1920_lc_3),to_integer(unsigned('0' & zext_ln203_10_fu_899_p1(31-1 downto 0)))));
    lshr_ln203_fu_379_p2 <= std_logic_vector(shift_right(unsigned(select_ln203_1_fu_349_p3),to_integer(unsigned('0' & zext_ln203_1_fu_371_p1(31-1 downto 0)))));
    or_ln203_fu_402_p2 <= (sub_ln203_fu_271_p2 or ap_const_lv8_1);
    select_ln203_10_fu_742_p3 <= 
        tmp_176_fu_706_p4 when (icmp_ln203_3_fu_688_p2(0) = '1') else 
        data_V;
    select_ln203_11_fu_750_p3 <= 
        sub_ln203_14_fu_722_p2 when (icmp_ln203_3_fu_688_p2(0) = '1') else 
        tmp_175_fu_694_p3;
    select_ln203_12_fu_865_p3 <= 
        sub_ln203_17_fu_847_p2 when (icmp_ln203_4_fu_819_p2(0) = '1') else 
        sub_ln203_19_fu_859_p2;
    select_ln203_13_fu_873_p3 <= 
        tmp_178_fu_837_p4 when (icmp_ln203_4_fu_819_p2(0) = '1') else 
        data_V;
    select_ln203_14_fu_881_p3 <= 
        sub_ln203_18_fu_853_p2 when (icmp_ln203_4_fu_819_p2(0) = '1') else 
        tmp_177_fu_825_p3;
    select_ln203_15_fu_996_p3 <= 
        sub_ln203_21_fu_978_p2 when (icmp_ln203_5_fu_950_p2(0) = '1') else 
        sub_ln203_23_fu_990_p2;
    select_ln203_16_fu_1004_p3 <= 
        tmp_180_fu_968_p4 when (icmp_ln203_5_fu_950_p2(0) = '1') else 
        data_V;
    select_ln203_17_fu_1012_p3 <= 
        sub_ln203_22_fu_984_p2 when (icmp_ln203_5_fu_950_p2(0) = '1') else 
        tmp_179_fu_956_p3;
    select_ln203_1_fu_349_p3 <= 
        tmp_170_fu_313_p4 when (icmp_ln203_fu_295_p2(0) = '1') else 
        data_V;
    select_ln203_2_fu_357_p3 <= 
        sub_ln203_2_fu_329_p2 when (icmp_ln203_fu_295_p2(0) = '1') else 
        tmp_169_fu_301_p3;
    select_ln203_3_fu_472_p3 <= 
        sub_ln203_5_fu_454_p2 when (icmp_ln203_1_fu_426_p2(0) = '1') else 
        sub_ln203_7_fu_466_p2;
    select_ln203_4_fu_480_p3 <= 
        tmp_172_fu_444_p4 when (icmp_ln203_1_fu_426_p2(0) = '1') else 
        data_V;
    select_ln203_5_fu_488_p3 <= 
        sub_ln203_6_fu_460_p2 when (icmp_ln203_1_fu_426_p2(0) = '1') else 
        tmp_171_fu_432_p3;
    select_ln203_6_fu_603_p3 <= 
        sub_ln203_9_fu_585_p2 when (icmp_ln203_2_fu_557_p2(0) = '1') else 
        sub_ln203_11_fu_597_p2;
    select_ln203_7_fu_611_p3 <= 
        tmp_174_fu_575_p4 when (icmp_ln203_2_fu_557_p2(0) = '1') else 
        data_V;
    select_ln203_8_fu_619_p3 <= 
        sub_ln203_10_fu_591_p2 when (icmp_ln203_2_fu_557_p2(0) = '1') else 
        tmp_173_fu_563_p3;
    select_ln203_9_fu_734_p3 <= 
        sub_ln203_13_fu_716_p2 when (icmp_ln203_3_fu_688_p2(0) = '1') else 
        sub_ln203_15_fu_728_p2;
    select_ln203_fu_341_p3 <= 
        sub_ln203_1_fu_323_p2 when (icmp_ln203_fu_295_p2(0) = '1') else 
        sub_ln203_3_fu_335_p2;
    shl_ln490_1_fu_259_p3 <= (iloop_0_reg_166 & ap_const_lv1_0);
    shl_ln_fu_251_p3 <= (iloop_0_reg_166 & ap_const_lv3_0);
    sub_ln203_10_fu_591_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(tmp_173_fu_563_p3));
    sub_ln203_11_fu_597_p2 <= std_logic_vector(unsigned(trunc_ln203_4_fu_571_p1) - unsigned(tmp_173_fu_563_p3));
    sub_ln203_12_fu_627_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(select_ln203_6_fu_603_p3));
    sub_ln203_13_fu_716_p2 <= std_logic_vector(unsigned(tmp_175_fu_694_p3) - unsigned(trunc_ln203_6_fu_702_p1));
    sub_ln203_14_fu_722_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(tmp_175_fu_694_p3));
    sub_ln203_15_fu_728_p2 <= std_logic_vector(unsigned(trunc_ln203_6_fu_702_p1) - unsigned(tmp_175_fu_694_p3));
    sub_ln203_16_fu_758_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(select_ln203_9_fu_734_p3));
    sub_ln203_17_fu_847_p2 <= std_logic_vector(unsigned(tmp_177_fu_825_p3) - unsigned(trunc_ln203_8_fu_833_p1));
    sub_ln203_18_fu_853_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(tmp_177_fu_825_p3));
    sub_ln203_19_fu_859_p2 <= std_logic_vector(unsigned(trunc_ln203_8_fu_833_p1) - unsigned(tmp_177_fu_825_p3));
    sub_ln203_1_fu_323_p2 <= std_logic_vector(unsigned(tmp_169_fu_301_p3) - unsigned(trunc_ln203_fu_309_p1));
    sub_ln203_20_fu_889_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(select_ln203_12_fu_865_p3));
    sub_ln203_21_fu_978_p2 <= std_logic_vector(unsigned(tmp_179_fu_956_p3) - unsigned(trunc_ln203_10_fu_964_p1));
    sub_ln203_22_fu_984_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(tmp_179_fu_956_p3));
    sub_ln203_23_fu_990_p2 <= std_logic_vector(unsigned(trunc_ln203_10_fu_964_p1) - unsigned(tmp_179_fu_956_p3));
    sub_ln203_24_fu_1020_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(select_ln203_15_fu_996_p3));
    sub_ln203_2_fu_329_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(tmp_169_fu_301_p3));
    sub_ln203_3_fu_335_p2 <= std_logic_vector(unsigned(trunc_ln203_fu_309_p1) - unsigned(tmp_169_fu_301_p3));
    sub_ln203_4_fu_365_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(select_ln203_fu_341_p3));
    sub_ln203_5_fu_454_p2 <= std_logic_vector(unsigned(tmp_171_fu_432_p3) - unsigned(trunc_ln203_2_fu_440_p1));
    sub_ln203_6_fu_460_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(tmp_171_fu_432_p3));
    sub_ln203_7_fu_466_p2 <= std_logic_vector(unsigned(trunc_ln203_2_fu_440_p1) - unsigned(tmp_171_fu_432_p3));
    sub_ln203_8_fu_496_p2 <= std_logic_vector(signed(ap_const_lv11_77F) - signed(select_ln203_3_fu_472_p3));
    sub_ln203_9_fu_585_p2 <= std_logic_vector(unsigned(tmp_173_fu_563_p3) - unsigned(trunc_ln203_4_fu_571_p1));
    sub_ln203_fu_271_p2 <= std_logic_vector(unsigned(shl_ln_fu_251_p3) - unsigned(zext_ln203_fu_267_p1));
    tmp_169_fu_301_p3 <= (empty_20_fu_277_p1 & ap_const_lv4_0);
    
    tmp_170_fu_313_p4_proc : process(data_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_170_fu_313_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(11 - 1 downto 0) := ap_const_lv32_77F(11 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(11 - 1 downto 0) := ap_const_lv32_0(11 - 1 downto 0);
        v0_cpy := data_V;
        if (vlo_cpy(11 - 1 downto 0) > vhi_cpy(11 - 1 downto 0)) then
            vhi_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_0(11-1 downto 0)));
            vlo_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_77F(11-1 downto 0)));
            for tmp_170_fu_313_p4_i in 0 to 1920-1 loop
                v0_cpy(tmp_170_fu_313_p4_i) := data_V(1920-1-tmp_170_fu_313_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(11-1 downto 0)))));

        section := (others=>'0');
        section(11-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(11-1 downto 0)) - unsigned(vlo_cpy(11-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(1920-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_170_fu_313_p4 <= resvalue(1920-1 downto 0);
    end process;

    tmp_171_fu_432_p3 <= (empty_22_fu_408_p1 & ap_const_lv4_0);
    
    tmp_172_fu_444_p4_proc : process(data_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_172_fu_444_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(11 - 1 downto 0) := ap_const_lv32_77F(11 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(11 - 1 downto 0) := ap_const_lv32_0(11 - 1 downto 0);
        v0_cpy := data_V;
        if (vlo_cpy(11 - 1 downto 0) > vhi_cpy(11 - 1 downto 0)) then
            vhi_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_0(11-1 downto 0)));
            vlo_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_77F(11-1 downto 0)));
            for tmp_172_fu_444_p4_i in 0 to 1920-1 loop
                v0_cpy(tmp_172_fu_444_p4_i) := data_V(1920-1-tmp_172_fu_444_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(11-1 downto 0)))));

        section := (others=>'0');
        section(11-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(11-1 downto 0)) - unsigned(vlo_cpy(11-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(1920-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_172_fu_444_p4 <= resvalue(1920-1 downto 0);
    end process;

    tmp_173_fu_563_p3 <= (empty_24_fu_539_p1 & ap_const_lv4_0);
    
    tmp_174_fu_575_p4_proc : process(data_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_174_fu_575_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(11 - 1 downto 0) := ap_const_lv32_77F(11 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(11 - 1 downto 0) := ap_const_lv32_0(11 - 1 downto 0);
        v0_cpy := data_V;
        if (vlo_cpy(11 - 1 downto 0) > vhi_cpy(11 - 1 downto 0)) then
            vhi_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_0(11-1 downto 0)));
            vlo_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_77F(11-1 downto 0)));
            for tmp_174_fu_575_p4_i in 0 to 1920-1 loop
                v0_cpy(tmp_174_fu_575_p4_i) := data_V(1920-1-tmp_174_fu_575_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(11-1 downto 0)))));

        section := (others=>'0');
        section(11-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(11-1 downto 0)) - unsigned(vlo_cpy(11-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(1920-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_174_fu_575_p4 <= resvalue(1920-1 downto 0);
    end process;

    tmp_175_fu_694_p3 <= (empty_26_fu_670_p1 & ap_const_lv4_0);
    
    tmp_176_fu_706_p4_proc : process(data_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_176_fu_706_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(11 - 1 downto 0) := ap_const_lv32_77F(11 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(11 - 1 downto 0) := ap_const_lv32_0(11 - 1 downto 0);
        v0_cpy := data_V;
        if (vlo_cpy(11 - 1 downto 0) > vhi_cpy(11 - 1 downto 0)) then
            vhi_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_0(11-1 downto 0)));
            vlo_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_77F(11-1 downto 0)));
            for tmp_176_fu_706_p4_i in 0 to 1920-1 loop
                v0_cpy(tmp_176_fu_706_p4_i) := data_V(1920-1-tmp_176_fu_706_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(11-1 downto 0)))));

        section := (others=>'0');
        section(11-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(11-1 downto 0)) - unsigned(vlo_cpy(11-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(1920-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_176_fu_706_p4 <= resvalue(1920-1 downto 0);
    end process;

    tmp_177_fu_825_p3 <= (empty_28_fu_801_p1 & ap_const_lv4_0);
    
    tmp_178_fu_837_p4_proc : process(data_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_178_fu_837_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(11 - 1 downto 0) := ap_const_lv32_77F(11 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(11 - 1 downto 0) := ap_const_lv32_0(11 - 1 downto 0);
        v0_cpy := data_V;
        if (vlo_cpy(11 - 1 downto 0) > vhi_cpy(11 - 1 downto 0)) then
            vhi_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_0(11-1 downto 0)));
            vlo_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_77F(11-1 downto 0)));
            for tmp_178_fu_837_p4_i in 0 to 1920-1 loop
                v0_cpy(tmp_178_fu_837_p4_i) := data_V(1920-1-tmp_178_fu_837_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(11-1 downto 0)))));

        section := (others=>'0');
        section(11-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(11-1 downto 0)) - unsigned(vlo_cpy(11-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(1920-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_178_fu_837_p4 <= resvalue(1920-1 downto 0);
    end process;

    tmp_179_fu_956_p3 <= (empty_30_fu_932_p1 & ap_const_lv4_0);
    
    tmp_180_fu_968_p4_proc : process(data_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(1920+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_180_fu_968_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(1920 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(11 - 1 downto 0) := ap_const_lv32_77F(11 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(11 - 1 downto 0) := ap_const_lv32_0(11 - 1 downto 0);
        v0_cpy := data_V;
        if (vlo_cpy(11 - 1 downto 0) > vhi_cpy(11 - 1 downto 0)) then
            vhi_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_0(11-1 downto 0)));
            vlo_cpy(11-1 downto 0) := std_logic_vector(1920-1-unsigned(ap_const_lv32_77F(11-1 downto 0)));
            for tmp_180_fu_968_p4_i in 0 to 1920-1 loop
                v0_cpy(tmp_180_fu_968_p4_i) := data_V(1920-1-tmp_180_fu_968_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(11-1 downto 0)))));

        section := (others=>'0');
        section(11-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(11-1 downto 0)) - unsigned(vlo_cpy(11-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(1920-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_180_fu_968_p4 <= resvalue(1920-1 downto 0);
    end process;

    tmp_1_fu_412_p3 <= (or_ln203_fu_402_p2 & ap_const_lv4_0);
    tmp_2_fu_543_p3 <= (add_ln203_fu_533_p2 & ap_const_lv4_0);
    tmp_3_fu_674_p3 <= (add_ln203_1_fu_664_p2 & ap_const_lv4_0);
    tmp_4_fu_805_p3 <= (add_ln203_2_fu_795_p2 & ap_const_lv4_0);
    tmp_5_fu_936_p3 <= (add_ln203_3_fu_926_p2 & ap_const_lv4_0);
    tmp_fu_281_p3 <= (sub_ln203_fu_271_p2 & ap_const_lv4_0);
    trunc_ln203_10_fu_964_p1 <= empty_31_fu_944_p2(11 - 1 downto 0);
    trunc_ln203_2_fu_440_p1 <= empty_23_fu_420_p2(11 - 1 downto 0);
    trunc_ln203_4_fu_571_p1 <= empty_25_fu_551_p2(11 - 1 downto 0);
    trunc_ln203_6_fu_702_p1 <= empty_27_fu_682_p2(11 - 1 downto 0);
    trunc_ln203_8_fu_833_p1 <= empty_29_fu_813_p2(11 - 1 downto 0);
    trunc_ln203_fu_309_p1 <= empty_21_fu_289_p2(11 - 1 downto 0);
    zext_ln203_10_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln203_20_fu_889_p2),1920));
    zext_ln203_11_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_17_fu_1012_p3),1920));
    zext_ln203_12_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln203_24_fu_1020_p2),1920));
    zext_ln203_1_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_2_fu_357_p3),1920));
    zext_ln203_2_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln203_4_fu_365_p2),1920));
    zext_ln203_3_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_5_fu_488_p3),1920));
    zext_ln203_4_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln203_8_fu_496_p2),1920));
    zext_ln203_5_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_8_fu_619_p3),1920));
    zext_ln203_6_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln203_12_fu_627_p2),1920));
    zext_ln203_7_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_11_fu_750_p3),1920));
    zext_ln203_8_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln203_16_fu_758_p2),1920));
    zext_ln203_9_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln203_14_fu_881_p3),1920));
    zext_ln203_fu_267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln490_1_fu_259_p3),8));
end behav;
