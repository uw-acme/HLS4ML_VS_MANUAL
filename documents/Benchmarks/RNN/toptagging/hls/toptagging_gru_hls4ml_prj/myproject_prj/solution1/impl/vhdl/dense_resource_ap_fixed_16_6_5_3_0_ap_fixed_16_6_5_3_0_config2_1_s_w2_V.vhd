-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_rom is 
    generic(
             DWIDTH     : integer := 188; 
             AWIDTH     : integer := 5; 
             MEM_SIZE    : integer := 30
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11101111011000000001010001010000000000000010000000100010101011111111111111101111111111111101000000000000000100000000000010000000000000000001000000000101000111111111111111000000000000000100", 
    1 => "11101101110100000001110101000000000111101000111111101010100011111111011110111111111111000011000000000000010000000000000000010000000000000001000000001000101100000000000000000000000010101010", 
    2 => "00101101100011111011011011110000000110010010111111111101000111111111100001011111111101100111000000000000010111111111111010110000000000000001000001010001010000000000000111100000000000111000", 
    3 => "11101000011000000000100010010000000000000100000000011001010111111111111111101111111111111110000000000000000100000000000001000000000000000000000000000011001111111111111111000000000000001000", 
    4 => "01111011001000000111011010101111111111101111000001001010000011111111111010001111111111111101000000000000011100000000000001000000000000000000000000000101100100000000000000101111111111111001", 
    5 => "11111010100111111111110111101111111110101111000000011000000011111111101110110000000000010101000000000001000011111111111111110000000000000001111111101011111111111111110001110000001011011111", 
    6 => "00100100011111111111101111001111111011000010000000001110010011111111111111011111111111111100111111111111111111111111111111101111111111011100000000000000110000000000000110110000000000000000", 
    7 => "11100111101011111111010011001111110110011101111111110010101111111111111111000000000000000010111111110010000000000000000000011111111111111001000000000000101011111110111100110000000000000000", 
    8 => "00110101110111111110100011010000001100100001111111111110000011111111101111000000000000000100111111100101110100000000000000000000000000101010000000000000100011111110110011101111111111111101", 
    9 => "00001011001011111111110000001111111000011100000000001011010111111111111111001111111111111100000000000000000011111111111111011111111111011000000000000000110000000000000111000000000000000000", 
    10 => "00110011111011111111111110101111011100110110111111111111111000000000000000001111111111111110111111111111111100000000000000011111111111110111000000000000010111111111111111111111111111111100", 
    11 => "11110111001000000000001010110000000011010001111111111011001011111111101000100000000000000011111111111111110000000000000011011111111101100010000000000000011100000000000101001111111111010010", 
    12 => "00011010110011111110100111100000000001110100111110111010000111111111111111010000000000000001000000000000000100000000000000101111111111101111111111111100111011111111111111011111111110101100", 
    13 => "00001101011100000001010100110000001011010101111111110101011011111111111101001111111111111111111111111010100011111111100100101111111111111101000000000100000111111111111110100000000000010111", 
    14 => "00001111010011111111110011011111110010111010000000001110011111111111111110101111111111111111111111110111000111111111110000101111111111111001000000000000100011111111111110101111111110100110", 
    15 => "00010101000011111110110111111111111110010000111110111110000111111111111111100000000000000001000000000000000100000000000000011111111111101111111111111101100111111111111111011111111110110110", 
    16 => "11101101001111111111101011101111101010011101111111111101100000000000000000011111111111111111111111111001000111111111111111000000000000000010000000000001101100000000000000000000000000000011", 
    17 => "00010001101100000000001101001111111010101110111111101000011111111111111011100000000000001101111111111011110100000000000110100000000000101000111111111111110011111111111101010000001011000010", 
    18 => "11110000111000000000111100101111111111001010000000000101001100000000000000011111111111111100000000000000001011111111111110101111111111111101111111111110100011111111111111011111111111110101", 
    19 => "00010110111111111111011011001111111100100001000000101000011011111111111110111111111111111000000000000000011011111111010110011111111111110010000000000000000100000000011010011111111110111111", 
    20 => "00001011010011111111100011100000000011000100000000101001010011111111111101011111111111111010000000000000101011111110111010010000000000000000111111111111110100000000010011111111111111110011", 
    21 => "11101110110100000001000011100000000000001101000000000111010100000000000000011111111111111101000000000000001111111111111110111111111111111101111111111110100011111111111111011111111111110101", 
    22 => "00000000100011111111110111110000000001101000111111011100010111111111111111110000000000000100000000000000010100000000000000000000000000000101111111111111111011111111111101111111111111111101", 
    23 => "00011001100111111111111100010000000010101100111111110011111111111111111111111111111111111000000000000000011111111111100010111111111111111111000000000011001100000000111111011111111110001000", 
    24 => "11111111110011111111101101000000000001110010111110010000110100000000000000100000000000000000000000000000001100000000000000011111111111111001000000000000110111111111111101001111111111101111", 
    25 => "00000000100000000000001110111111110111101001000000001101111111111111111111110000000000000101111111111111001100000000000000101111111111110110000000000000011100000000000011000000000000000101", 
    26 => "11110111010000000001000111111111110111111011111111110111010111111111111111010000000000000110000000000000001111111111111101101111111111111100000000000011000000000000011101000000000000000011", 
    27 => "11111111110111111111110101010000000010000110111110100011100100000000000000100000000000000000000000000000001100000000000000011111111111111001000000000000110111111111111100111111111111101111", 
    28 => "11111111111011111111111001101111111111111111111111001100101000000000000000101111111111111111000000000000001000000000000000001111111111111011111111111111101111111111111111110000000000000011", 
    29 => "11110011000111111111011111110000000100001101000000000101011000000000000000100000000000000101111111111111101111111111100110111111111111001001000000000100100100000001010000011111111111010010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V is
    generic (
        DataWidth : INTEGER := 188;
        AddressRange : INTEGER := 30;
        AddressWidth : INTEGER := 5);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V is
    component dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_rom_U :  component dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


