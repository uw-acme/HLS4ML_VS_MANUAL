// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_H__
#define __dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 188;
  static const unsigned AddressRange = 30;
  static const unsigned AddressWidth = 5;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_ram) {
        ram[0] = "0b11101111011000000001010001010000000000000010000000100010101011111111111111101111111111111101000000000000000100000000000010000000000000000001000000000101000111111111111111000000000000000100";
        ram[1] = "0b11101101110100000001110101000000000111101000111111101010100011111111011110111111111111000011000000000000010000000000000000010000000000000001000000001000101100000000000000000000000010101010";
        ram[2] = "0b00101101100011111011011011110000000110010010111111111101000111111111100001011111111101100111000000000000010111111111111010110000000000000001000001010001010000000000000111100000000000111000";
        ram[3] = "0b11101000011000000000100010010000000000000100000000011001010111111111111111101111111111111110000000000000000100000000000001000000000000000000000000000011001111111111111111000000000000001000";
        ram[4] = "0b01111011001000000111011010101111111111101111000001001010000011111111111010001111111111111101000000000000011100000000000001000000000000000000000000000101100100000000000000101111111111111001";
        ram[5] = "0b11111010100111111111110111101111111110101111000000011000000011111111101110110000000000010101000000000001000011111111111111110000000000000001111111101011111111111111110001110000001011011111";
        ram[6] = "0b00100100011111111111101111001111111011000010000000001110010011111111111111011111111111111100111111111111111111111111111111101111111111011100000000000000110000000000000110110000000000000000";
        ram[7] = "0b11100111101011111111010011001111110110011101111111110010101111111111111111000000000000000010111111110010000000000000000000011111111111111001000000000000101011111110111100110000000000000000";
        ram[8] = "0b00110101110111111110100011010000001100100001111111111110000011111111101111000000000000000100111111100101110100000000000000000000000000101010000000000000100011111110110011101111111111111101";
        ram[9] = "0b00001011001011111111110000001111111000011100000000001011010111111111111111001111111111111100000000000000000011111111111111011111111111011000000000000000110000000000000111000000000000000000";
        ram[10] = "0b00110011111011111111111110101111011100110110111111111111111000000000000000001111111111111110111111111111111100000000000000011111111111110111000000000000010111111111111111111111111111111100";
        ram[11] = "0b11110111001000000000001010110000000011010001111111111011001011111111101000100000000000000011111111111111110000000000000011011111111101100010000000000000011100000000000101001111111111010010";
        ram[12] = "0b00011010110011111110100111100000000001110100111110111010000111111111111111010000000000000001000000000000000100000000000000101111111111101111111111111100111011111111111111011111111110101100";
        ram[13] = "0b00001101011100000001010100110000001011010101111111110101011011111111111101001111111111111111111111111010100011111111100100101111111111111101000000000100000111111111111110100000000000010111";
        ram[14] = "0b00001111010011111111110011011111110010111010000000001110011111111111111110101111111111111111111111110111000111111111110000101111111111111001000000000000100011111111111110101111111110100110";
        ram[15] = "0b00010101000011111110110111111111111110010000111110111110000111111111111111100000000000000001000000000000000100000000000000011111111111101111111111111101100111111111111111011111111110110110";
        ram[16] = "0b11101101001111111111101011101111101010011101111111111101100000000000000000011111111111111111111111111001000111111111111111000000000000000010000000000001101100000000000000000000000000000011";
        ram[17] = "0b00010001101100000000001101001111111010101110111111101000011111111111111011100000000000001101111111111011110100000000000110100000000000101000111111111111110011111111111101010000001011000010";
        ram[18] = "0b11110000111000000000111100101111111111001010000000000101001100000000000000011111111111111100000000000000001011111111111110101111111111111101111111111110100011111111111111011111111111110101";
        ram[19] = "0b00010110111111111111011011001111111100100001000000101000011011111111111110111111111111111000000000000000011011111111010110011111111111110010000000000000000100000000011010011111111110111111";
        ram[20] = "0b00001011010011111111100011100000000011000100000000101001010011111111111101011111111111111010000000000000101011111110111010010000000000000000111111111111110100000000010011111111111111110011";
        ram[21] = "0b11101110110100000001000011100000000000001101000000000111010100000000000000011111111111111101000000000000001111111111111110111111111111111101111111111110100011111111111111011111111111110101";
        ram[22] = "0b00000000100011111111110111110000000001101000111111011100010111111111111111110000000000000100000000000000010100000000000000000000000000000101111111111111111011111111111101111111111111111101";
        ram[23] = "0b00011001100111111111111100010000000010101100111111110011111111111111111111111111111111111000000000000000011111111111100010111111111111111111000000000011001100000000111111011111111110001000";
        ram[24] = "0b11111111110011111111101101000000000001110010111110010000110100000000000000100000000000000000000000000000001100000000000000011111111111111001000000000000110111111111111101001111111111101111";
        ram[25] = "0b00000000100000000000001110111111110111101001000000001101111111111111111111110000000000000101111111111111001100000000000000101111111111110110000000000000011100000000000011000000000000000101";
        ram[26] = "0b11110111010000000001000111111111110111111011111111110111010111111111111111010000000000000110000000000000001111111111111101101111111111111100000000000011000000000000011101000000000000000011";
        ram[27] = "0b11111111110111111111110101010000000010000110111110100011100100000000000000100000000000000000000000000000001100000000000000011111111111111001000000000000110111111111111100111111111111101111";
        ram[28] = "0b11111111111011111111111001101111111111111111111111001100101000000000000000101111111111111111000000000000001000000000000000001111111111111011111111111111101111111111111111110000000000000011";
        ram[29] = "0b11110011000111111111011111110000000100001101000000000101011000000000000000100000000000000101111111111111101111111111100110111111111111001001000000000100100100000001010000011111111111010010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V) {


static const unsigned DataWidth = 188;
static const unsigned AddressRange = 30;
static const unsigned AddressWidth = 5;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_ram* meminst;


SC_CTOR(dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V) {
meminst = new dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_ram("dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~dense_resource_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_1_s_w2_V() {
    delete meminst;
}


};//endmodule
#endif
