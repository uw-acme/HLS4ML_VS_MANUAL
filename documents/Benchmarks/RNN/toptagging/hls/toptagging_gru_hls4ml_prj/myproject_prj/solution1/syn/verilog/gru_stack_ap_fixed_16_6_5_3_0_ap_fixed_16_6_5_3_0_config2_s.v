// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gru_stack_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_V,
        data_V_ap_vld,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1919:0] data_V;
input   data_V_ap_vld;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;
output  [15:0] ap_return_12;
output  [15:0] ap_return_13;
output  [15:0] ap_return_14;
output  [15:0] ap_return_15;
output  [15:0] ap_return_16;
output  [15:0] ap_return_17;
output  [15:0] ap_return_18;
output  [15:0] ap_return_19;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] h_state_V114_0;
reg   [15:0] h_state_V114_1;
reg   [15:0] h_state_V114_2;
reg   [15:0] h_state_V114_3;
reg   [15:0] h_state_V114_4;
reg   [15:0] h_state_V114_5;
reg   [15:0] h_state_V114_6;
reg   [15:0] h_state_V114_7;
reg   [15:0] h_state_V114_8;
reg   [15:0] h_state_V114_9;
reg   [15:0] h_state_V114_10;
reg   [15:0] h_state_V114_11;
reg   [15:0] h_state_V114_12;
reg   [15:0] h_state_V114_13;
reg   [15:0] h_state_V114_14;
reg   [15:0] h_state_V114_15;
reg   [15:0] h_state_V114_16;
reg   [15:0] h_state_V114_17;
reg   [15:0] h_state_V114_18;
reg   [15:0] h_state_V114_19;
reg    data_V_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln487_fu_239_p2;
wire   [4:0] iloop_fu_245_p2;
reg   [4:0] iloop_reg_1460;
reg    ap_block_state2;
wire   [15:0] data_in_0_V_fu_397_p1;
reg   [15:0] data_in_0_V_reg_1465;
wire   [15:0] data_in_1_V_fu_528_p1;
reg   [15:0] data_in_1_V_reg_1470;
wire   [15:0] data_in_2_V_fu_659_p1;
reg   [15:0] data_in_2_V_reg_1475;
wire   [15:0] data_in_3_V_fu_790_p1;
reg   [15:0] data_in_3_V_reg_1480;
wire   [15:0] data_in_4_V_fu_921_p1;
reg   [15:0] data_in_4_V_reg_1485;
wire   [15:0] data_in_5_V_fu_1052_p1;
reg   [15:0] data_in_5_V_reg_1490;
wire    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start;
wire    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done;
wire    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_idle;
wire    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_ready;
wire    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_reset_state;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_0;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_1;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_2;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_3;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_4;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_5;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_6;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_7;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_8;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_9;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_10;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_11;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_12;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_13;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_14;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_15;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_16;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_17;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_18;
wire   [15:0] grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_19;
reg   [0:0] reset_state_0_reg_152;
wire    ap_CS_fsm_state3;
reg    ap_block_state1;
reg   [4:0] iloop_0_reg_166;
reg    grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg;
reg    ap_block_state2_ignore_call130;
wire   [5:0] shl_ln490_1_fu_259_p3;
wire   [7:0] shl_ln_fu_251_p3;
wire   [7:0] zext_ln203_fu_267_p1;
wire   [7:0] sub_ln203_fu_271_p2;
wire   [11:0] tmp_fu_281_p3;
wire   [11:0] empty_21_fu_289_p2;
wire   [6:0] empty_20_fu_277_p1;
wire   [10:0] tmp_169_fu_301_p3;
wire   [10:0] trunc_ln203_fu_309_p1;
wire   [0:0] icmp_ln203_fu_295_p2;
wire   [10:0] sub_ln203_1_fu_323_p2;
wire   [10:0] sub_ln203_3_fu_335_p2;
reg   [1919:0] tmp_170_fu_313_p4;
wire   [10:0] sub_ln203_2_fu_329_p2;
wire   [10:0] select_ln203_fu_341_p3;
wire   [10:0] select_ln203_2_fu_357_p3;
wire   [10:0] sub_ln203_4_fu_365_p2;
wire   [1919:0] select_ln203_1_fu_349_p3;
wire   [1919:0] zext_ln203_1_fu_371_p1;
wire   [1919:0] zext_ln203_2_fu_375_p1;
wire   [1919:0] lshr_ln203_fu_379_p2;
wire   [1919:0] lshr_ln203_1_fu_385_p2;
wire   [1919:0] and_ln203_fu_391_p2;
wire   [7:0] or_ln203_fu_402_p2;
wire   [11:0] tmp_1_fu_412_p3;
wire   [11:0] empty_23_fu_420_p2;
wire   [6:0] empty_22_fu_408_p1;
wire   [10:0] tmp_171_fu_432_p3;
wire   [10:0] trunc_ln203_2_fu_440_p1;
wire   [0:0] icmp_ln203_1_fu_426_p2;
wire   [10:0] sub_ln203_5_fu_454_p2;
wire   [10:0] sub_ln203_7_fu_466_p2;
reg   [1919:0] tmp_172_fu_444_p4;
wire   [10:0] sub_ln203_6_fu_460_p2;
wire   [10:0] select_ln203_3_fu_472_p3;
wire   [10:0] select_ln203_5_fu_488_p3;
wire   [10:0] sub_ln203_8_fu_496_p2;
wire   [1919:0] select_ln203_4_fu_480_p3;
wire   [1919:0] zext_ln203_3_fu_502_p1;
wire   [1919:0] zext_ln203_4_fu_506_p1;
wire   [1919:0] lshr_ln203_2_fu_510_p2;
wire   [1919:0] lshr_ln203_3_fu_516_p2;
wire   [1919:0] and_ln203_1_fu_522_p2;
wire   [7:0] add_ln203_fu_533_p2;
wire   [11:0] tmp_2_fu_543_p3;
wire   [11:0] empty_25_fu_551_p2;
wire   [6:0] empty_24_fu_539_p1;
wire   [10:0] tmp_173_fu_563_p3;
wire   [10:0] trunc_ln203_4_fu_571_p1;
wire   [0:0] icmp_ln203_2_fu_557_p2;
wire   [10:0] sub_ln203_9_fu_585_p2;
wire   [10:0] sub_ln203_11_fu_597_p2;
reg   [1919:0] tmp_174_fu_575_p4;
wire   [10:0] sub_ln203_10_fu_591_p2;
wire   [10:0] select_ln203_6_fu_603_p3;
wire   [10:0] select_ln203_8_fu_619_p3;
wire   [10:0] sub_ln203_12_fu_627_p2;
wire   [1919:0] select_ln203_7_fu_611_p3;
wire   [1919:0] zext_ln203_5_fu_633_p1;
wire   [1919:0] zext_ln203_6_fu_637_p1;
wire   [1919:0] lshr_ln203_4_fu_641_p2;
wire   [1919:0] lshr_ln203_5_fu_647_p2;
wire   [1919:0] and_ln203_2_fu_653_p2;
wire   [7:0] add_ln203_1_fu_664_p2;
wire   [11:0] tmp_3_fu_674_p3;
wire   [11:0] empty_27_fu_682_p2;
wire   [6:0] empty_26_fu_670_p1;
wire   [10:0] tmp_175_fu_694_p3;
wire   [10:0] trunc_ln203_6_fu_702_p1;
wire   [0:0] icmp_ln203_3_fu_688_p2;
wire   [10:0] sub_ln203_13_fu_716_p2;
wire   [10:0] sub_ln203_15_fu_728_p2;
reg   [1919:0] tmp_176_fu_706_p4;
wire   [10:0] sub_ln203_14_fu_722_p2;
wire   [10:0] select_ln203_9_fu_734_p3;
wire   [10:0] select_ln203_11_fu_750_p3;
wire   [10:0] sub_ln203_16_fu_758_p2;
wire   [1919:0] select_ln203_10_fu_742_p3;
wire   [1919:0] zext_ln203_7_fu_764_p1;
wire   [1919:0] zext_ln203_8_fu_768_p1;
wire   [1919:0] lshr_ln203_6_fu_772_p2;
wire   [1919:0] lshr_ln203_7_fu_778_p2;
wire   [1919:0] and_ln203_3_fu_784_p2;
wire   [7:0] add_ln203_2_fu_795_p2;
wire   [11:0] tmp_4_fu_805_p3;
wire   [11:0] empty_29_fu_813_p2;
wire   [6:0] empty_28_fu_801_p1;
wire   [10:0] tmp_177_fu_825_p3;
wire   [10:0] trunc_ln203_8_fu_833_p1;
wire   [0:0] icmp_ln203_4_fu_819_p2;
wire   [10:0] sub_ln203_17_fu_847_p2;
wire   [10:0] sub_ln203_19_fu_859_p2;
reg   [1919:0] tmp_178_fu_837_p4;
wire   [10:0] sub_ln203_18_fu_853_p2;
wire   [10:0] select_ln203_12_fu_865_p3;
wire   [10:0] select_ln203_14_fu_881_p3;
wire   [10:0] sub_ln203_20_fu_889_p2;
wire   [1919:0] select_ln203_13_fu_873_p3;
wire   [1919:0] zext_ln203_9_fu_895_p1;
wire   [1919:0] zext_ln203_10_fu_899_p1;
wire   [1919:0] lshr_ln203_8_fu_903_p2;
wire   [1919:0] lshr_ln203_9_fu_909_p2;
wire   [1919:0] and_ln203_4_fu_915_p2;
wire   [7:0] add_ln203_3_fu_926_p2;
wire   [11:0] tmp_5_fu_936_p3;
wire   [11:0] empty_31_fu_944_p2;
wire   [6:0] empty_30_fu_932_p1;
wire   [10:0] tmp_179_fu_956_p3;
wire   [10:0] trunc_ln203_10_fu_964_p1;
wire   [0:0] icmp_ln203_5_fu_950_p2;
wire   [10:0] sub_ln203_21_fu_978_p2;
wire   [10:0] sub_ln203_23_fu_990_p2;
reg   [1919:0] tmp_180_fu_968_p4;
wire   [10:0] sub_ln203_22_fu_984_p2;
wire   [10:0] select_ln203_15_fu_996_p3;
wire   [10:0] select_ln203_17_fu_1012_p3;
wire   [10:0] sub_ln203_24_fu_1020_p2;
wire   [1919:0] select_ln203_16_fu_1004_p3;
wire   [1919:0] zext_ln203_11_fu_1026_p1;
wire   [1919:0] zext_ln203_12_fu_1030_p1;
wire   [1919:0] lshr_ln203_10_fu_1034_p2;
wire   [1919:0] lshr_ln203_11_fu_1040_p2;
wire   [1919:0] and_ln203_5_fu_1046_p2;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 h_state_V114_0 = 16'd0;
#0 h_state_V114_1 = 16'd0;
#0 h_state_V114_2 = 16'd0;
#0 h_state_V114_3 = 16'd0;
#0 h_state_V114_4 = 16'd0;
#0 h_state_V114_5 = 16'd0;
#0 h_state_V114_6 = 16'd0;
#0 h_state_V114_7 = 16'd0;
#0 h_state_V114_8 = 16'd0;
#0 h_state_V114_9 = 16'd0;
#0 h_state_V114_10 = 16'd0;
#0 h_state_V114_11 = 16'd0;
#0 h_state_V114_12 = 16'd0;
#0 h_state_V114_13 = 16'd0;
#0 h_state_V114_14 = 16'd0;
#0 h_state_V114_15 = 16'd0;
#0 h_state_V114_16 = 16'd0;
#0 h_state_V114_17 = 16'd0;
#0 h_state_V114_18 = 16'd0;
#0 h_state_V114_19 = 16'd0;
#0 grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg = 1'b0;
end

gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start),
    .ap_done(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done),
    .ap_idle(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_idle),
    .ap_ready(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_ready),
    .reset_state(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_reset_state),
    .data_0_V_read(data_in_0_V_reg_1465),
    .data_1_V_read(data_in_1_V_reg_1470),
    .data_2_V_read(data_in_2_V_reg_1475),
    .data_3_V_read(data_in_3_V_reg_1480),
    .data_4_V_read(data_in_4_V_reg_1485),
    .data_5_V_read(data_in_5_V_reg_1490),
    .ap_return_0(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_0),
    .ap_return_1(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_1),
    .ap_return_2(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_2),
    .ap_return_3(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_3),
    .ap_return_4(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_4),
    .ap_return_5(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_5),
    .ap_return_6(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_6),
    .ap_return_7(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_7),
    .ap_return_8(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_8),
    .ap_return_9(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_9),
    .ap_return_10(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_10),
    .ap_return_11(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_11),
    .ap_return_12(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_12),
    .ap_return_13(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_13),
    .ap_return_14(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_14),
    .ap_return_15(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_15),
    .ap_return_16(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_16),
    .ap_return_17(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_17),
    .ap_return_18(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_18),
    .ap_return_19(grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_19)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((icmp_ln487_fu_239_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln487_fu_239_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg <= 1'b1;
        end else if ((grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_ready == 1'b1)) begin
            grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        iloop_0_reg_166 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done == 1'b1))) begin
        iloop_0_reg_166 <= iloop_reg_1460;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reset_state_0_reg_152 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done == 1'b1))) begin
        reset_state_0_reg_152 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln487_fu_239_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        data_in_0_V_reg_1465 <= data_in_0_V_fu_397_p1;
        data_in_1_V_reg_1470 <= data_in_1_V_fu_528_p1;
        data_in_2_V_reg_1475 <= data_in_2_V_fu_659_p1;
        data_in_3_V_reg_1480 <= data_in_3_V_fu_790_p1;
        data_in_4_V_reg_1485 <= data_in_4_V_fu_921_p1;
        data_in_5_V_reg_1490 <= data_in_5_V_fu_1052_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done == 1'b1))) begin
        h_state_V114_0 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_0;
        h_state_V114_1 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_1;
        h_state_V114_10 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_10;
        h_state_V114_11 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_11;
        h_state_V114_12 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_12;
        h_state_V114_13 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_13;
        h_state_V114_14 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_14;
        h_state_V114_15 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_15;
        h_state_V114_16 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_16;
        h_state_V114_17 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_17;
        h_state_V114_18 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_18;
        h_state_V114_19 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_19;
        h_state_V114_2 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_2;
        h_state_V114_3 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_3;
        h_state_V114_4 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_4;
        h_state_V114_5 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_5;
        h_state_V114_6 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_6;
        h_state_V114_7 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_7;
        h_state_V114_8 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_8;
        h_state_V114_9 <= grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln487_fu_239_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        iloop_reg_1460 <= iloop_fu_245_p2;
    end
end

always @ (*) begin
    if ((~((icmp_ln487_fu_239_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln487_fu_239_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln487_fu_239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_blk_n = data_V_ap_vld;
    end else begin
        data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((icmp_ln487_fu_239_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((icmp_ln487_fu_239_p2 == 1'd0) & (data_V_ap_vld == 1'b0)) & (icmp_ln487_fu_239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln203_1_fu_664_p2 = (sub_ln203_fu_271_p2 + 8'd3);

assign add_ln203_2_fu_795_p2 = (sub_ln203_fu_271_p2 + 8'd4);

assign add_ln203_3_fu_926_p2 = (sub_ln203_fu_271_p2 + 8'd5);

assign add_ln203_fu_533_p2 = (sub_ln203_fu_271_p2 + 8'd2);

assign and_ln203_1_fu_522_p2 = (lshr_ln203_3_fu_516_p2 & lshr_ln203_2_fu_510_p2);

assign and_ln203_2_fu_653_p2 = (lshr_ln203_5_fu_647_p2 & lshr_ln203_4_fu_641_p2);

assign and_ln203_3_fu_784_p2 = (lshr_ln203_7_fu_778_p2 & lshr_ln203_6_fu_772_p2);

assign and_ln203_4_fu_915_p2 = (lshr_ln203_9_fu_909_p2 & lshr_ln203_8_fu_903_p2);

assign and_ln203_5_fu_1046_p2 = (lshr_ln203_11_fu_1040_p2 & lshr_ln203_10_fu_1034_p2);

assign and_ln203_fu_391_p2 = (lshr_ln203_fu_379_p2 & lshr_ln203_1_fu_385_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((icmp_ln487_fu_239_p2 == 1'd0) & (data_V_ap_vld == 1'b0));
end

always @ (*) begin
    ap_block_state2_ignore_call130 = ((icmp_ln487_fu_239_p2 == 1'd0) & (data_V_ap_vld == 1'b0));
end

assign ap_return_0 = h_state_V114_0;

assign ap_return_1 = h_state_V114_1;

assign ap_return_10 = h_state_V114_10;

assign ap_return_11 = h_state_V114_11;

assign ap_return_12 = h_state_V114_12;

assign ap_return_13 = h_state_V114_13;

assign ap_return_14 = h_state_V114_14;

assign ap_return_15 = h_state_V114_15;

assign ap_return_16 = h_state_V114_16;

assign ap_return_17 = h_state_V114_17;

assign ap_return_18 = h_state_V114_18;

assign ap_return_19 = h_state_V114_19;

assign ap_return_2 = h_state_V114_2;

assign ap_return_3 = h_state_V114_3;

assign ap_return_4 = h_state_V114_4;

assign ap_return_5 = h_state_V114_5;

assign ap_return_6 = h_state_V114_6;

assign ap_return_7 = h_state_V114_7;

assign ap_return_8 = h_state_V114_8;

assign ap_return_9 = h_state_V114_9;

assign data_in_0_V_fu_397_p1 = and_ln203_fu_391_p2[15:0];

assign data_in_1_V_fu_528_p1 = and_ln203_1_fu_522_p2[15:0];

assign data_in_2_V_fu_659_p1 = and_ln203_2_fu_653_p2[15:0];

assign data_in_3_V_fu_790_p1 = and_ln203_3_fu_784_p2[15:0];

assign data_in_4_V_fu_921_p1 = and_ln203_4_fu_915_p2[15:0];

assign data_in_5_V_fu_1052_p1 = and_ln203_5_fu_1046_p2[15:0];

assign empty_20_fu_277_p1 = sub_ln203_fu_271_p2[6:0];

assign empty_21_fu_289_p2 = (tmp_fu_281_p3 | 12'd15);

assign empty_22_fu_408_p1 = or_ln203_fu_402_p2[6:0];

assign empty_23_fu_420_p2 = (tmp_1_fu_412_p3 | 12'd15);

assign empty_24_fu_539_p1 = add_ln203_fu_533_p2[6:0];

assign empty_25_fu_551_p2 = (tmp_2_fu_543_p3 | 12'd15);

assign empty_26_fu_670_p1 = add_ln203_1_fu_664_p2[6:0];

assign empty_27_fu_682_p2 = (tmp_3_fu_674_p3 | 12'd15);

assign empty_28_fu_801_p1 = add_ln203_2_fu_795_p2[6:0];

assign empty_29_fu_813_p2 = (tmp_4_fu_805_p3 | 12'd15);

assign empty_30_fu_932_p1 = add_ln203_3_fu_926_p2[6:0];

assign empty_31_fu_944_p2 = (tmp_5_fu_936_p3 | 12'd15);

assign grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start = grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_ap_start_reg;

assign grp_gru_static_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s_fu_177_reset_state = reset_state_0_reg_152;

assign icmp_ln203_1_fu_426_p2 = ((tmp_1_fu_412_p3 > empty_23_fu_420_p2) ? 1'b1 : 1'b0);

assign icmp_ln203_2_fu_557_p2 = ((tmp_2_fu_543_p3 > empty_25_fu_551_p2) ? 1'b1 : 1'b0);

assign icmp_ln203_3_fu_688_p2 = ((tmp_3_fu_674_p3 > empty_27_fu_682_p2) ? 1'b1 : 1'b0);

assign icmp_ln203_4_fu_819_p2 = ((tmp_4_fu_805_p3 > empty_29_fu_813_p2) ? 1'b1 : 1'b0);

assign icmp_ln203_5_fu_950_p2 = ((tmp_5_fu_936_p3 > empty_31_fu_944_p2) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_295_p2 = ((tmp_fu_281_p3 > empty_21_fu_289_p2) ? 1'b1 : 1'b0);

assign icmp_ln487_fu_239_p2 = ((iloop_0_reg_166 == 5'd20) ? 1'b1 : 1'b0);

assign iloop_fu_245_p2 = (iloop_0_reg_166 + 5'd1);

assign lshr_ln203_10_fu_1034_p2 = select_ln203_16_fu_1004_p3 >> zext_ln203_11_fu_1026_p1;

assign lshr_ln203_11_fu_1040_p2 = 1920'd94971145180789141405469863695884969990692470634685116742800956330585166286696033875105787408321105016172948848387979899381078776548058719274153038481919330076987462588432197778346974895637755344856609332899271782077461008182119361693275785914457910967149403472811089067095457018656127063791202559391107981952290497413671516189054715030212151457729925746607341068107450556036691253445520158175442766273106804460580598760425795931407058821363012979657287013264796313022267140908229491284859997425339970007394059640858536497878915778164024704513828250590897948604589281308443672575 >> zext_ln203_12_fu_1030_p1;

assign lshr_ln203_1_fu_385_p2 = 1920'd94971145180789141405469863695884969990692470634685116742800956330585166286696033875105787408321105016172948848387979899381078776548058719274153038481919330076987462588432197778346974895637755344856609332899271782077461008182119361693275785914457910967149403472811089067095457018656127063791202559391107981952290497413671516189054715030212151457729925746607341068107450556036691253445520158175442766273106804460580598760425795931407058821363012979657287013264796313022267140908229491284859997425339970007394059640858536497878915778164024704513828250590897948604589281308443672575 >> zext_ln203_2_fu_375_p1;

assign lshr_ln203_2_fu_510_p2 = select_ln203_4_fu_480_p3 >> zext_ln203_3_fu_502_p1;

assign lshr_ln203_3_fu_516_p2 = 1920'd94971145180789141405469863695884969990692470634685116742800956330585166286696033875105787408321105016172948848387979899381078776548058719274153038481919330076987462588432197778346974895637755344856609332899271782077461008182119361693275785914457910967149403472811089067095457018656127063791202559391107981952290497413671516189054715030212151457729925746607341068107450556036691253445520158175442766273106804460580598760425795931407058821363012979657287013264796313022267140908229491284859997425339970007394059640858536497878915778164024704513828250590897948604589281308443672575 >> zext_ln203_4_fu_506_p1;

assign lshr_ln203_4_fu_641_p2 = select_ln203_7_fu_611_p3 >> zext_ln203_5_fu_633_p1;

assign lshr_ln203_5_fu_647_p2 = 1920'd94971145180789141405469863695884969990692470634685116742800956330585166286696033875105787408321105016172948848387979899381078776548058719274153038481919330076987462588432197778346974895637755344856609332899271782077461008182119361693275785914457910967149403472811089067095457018656127063791202559391107981952290497413671516189054715030212151457729925746607341068107450556036691253445520158175442766273106804460580598760425795931407058821363012979657287013264796313022267140908229491284859997425339970007394059640858536497878915778164024704513828250590897948604589281308443672575 >> zext_ln203_6_fu_637_p1;

assign lshr_ln203_6_fu_772_p2 = select_ln203_10_fu_742_p3 >> zext_ln203_7_fu_764_p1;

assign lshr_ln203_7_fu_778_p2 = 1920'd94971145180789141405469863695884969990692470634685116742800956330585166286696033875105787408321105016172948848387979899381078776548058719274153038481919330076987462588432197778346974895637755344856609332899271782077461008182119361693275785914457910967149403472811089067095457018656127063791202559391107981952290497413671516189054715030212151457729925746607341068107450556036691253445520158175442766273106804460580598760425795931407058821363012979657287013264796313022267140908229491284859997425339970007394059640858536497878915778164024704513828250590897948604589281308443672575 >> zext_ln203_8_fu_768_p1;

assign lshr_ln203_8_fu_903_p2 = select_ln203_13_fu_873_p3 >> zext_ln203_9_fu_895_p1;

assign lshr_ln203_9_fu_909_p2 = 1920'd94971145180789141405469863695884969990692470634685116742800956330585166286696033875105787408321105016172948848387979899381078776548058719274153038481919330076987462588432197778346974895637755344856609332899271782077461008182119361693275785914457910967149403472811089067095457018656127063791202559391107981952290497413671516189054715030212151457729925746607341068107450556036691253445520158175442766273106804460580598760425795931407058821363012979657287013264796313022267140908229491284859997425339970007394059640858536497878915778164024704513828250590897948604589281308443672575 >> zext_ln203_10_fu_899_p1;

assign lshr_ln203_fu_379_p2 = select_ln203_1_fu_349_p3 >> zext_ln203_1_fu_371_p1;

assign or_ln203_fu_402_p2 = (sub_ln203_fu_271_p2 | 8'd1);

assign select_ln203_10_fu_742_p3 = ((icmp_ln203_3_fu_688_p2[0:0] === 1'b1) ? tmp_176_fu_706_p4 : data_V);

assign select_ln203_11_fu_750_p3 = ((icmp_ln203_3_fu_688_p2[0:0] === 1'b1) ? sub_ln203_14_fu_722_p2 : tmp_175_fu_694_p3);

assign select_ln203_12_fu_865_p3 = ((icmp_ln203_4_fu_819_p2[0:0] === 1'b1) ? sub_ln203_17_fu_847_p2 : sub_ln203_19_fu_859_p2);

assign select_ln203_13_fu_873_p3 = ((icmp_ln203_4_fu_819_p2[0:0] === 1'b1) ? tmp_178_fu_837_p4 : data_V);

assign select_ln203_14_fu_881_p3 = ((icmp_ln203_4_fu_819_p2[0:0] === 1'b1) ? sub_ln203_18_fu_853_p2 : tmp_177_fu_825_p3);

assign select_ln203_15_fu_996_p3 = ((icmp_ln203_5_fu_950_p2[0:0] === 1'b1) ? sub_ln203_21_fu_978_p2 : sub_ln203_23_fu_990_p2);

assign select_ln203_16_fu_1004_p3 = ((icmp_ln203_5_fu_950_p2[0:0] === 1'b1) ? tmp_180_fu_968_p4 : data_V);

assign select_ln203_17_fu_1012_p3 = ((icmp_ln203_5_fu_950_p2[0:0] === 1'b1) ? sub_ln203_22_fu_984_p2 : tmp_179_fu_956_p3);

assign select_ln203_1_fu_349_p3 = ((icmp_ln203_fu_295_p2[0:0] === 1'b1) ? tmp_170_fu_313_p4 : data_V);

assign select_ln203_2_fu_357_p3 = ((icmp_ln203_fu_295_p2[0:0] === 1'b1) ? sub_ln203_2_fu_329_p2 : tmp_169_fu_301_p3);

assign select_ln203_3_fu_472_p3 = ((icmp_ln203_1_fu_426_p2[0:0] === 1'b1) ? sub_ln203_5_fu_454_p2 : sub_ln203_7_fu_466_p2);

assign select_ln203_4_fu_480_p3 = ((icmp_ln203_1_fu_426_p2[0:0] === 1'b1) ? tmp_172_fu_444_p4 : data_V);

assign select_ln203_5_fu_488_p3 = ((icmp_ln203_1_fu_426_p2[0:0] === 1'b1) ? sub_ln203_6_fu_460_p2 : tmp_171_fu_432_p3);

assign select_ln203_6_fu_603_p3 = ((icmp_ln203_2_fu_557_p2[0:0] === 1'b1) ? sub_ln203_9_fu_585_p2 : sub_ln203_11_fu_597_p2);

assign select_ln203_7_fu_611_p3 = ((icmp_ln203_2_fu_557_p2[0:0] === 1'b1) ? tmp_174_fu_575_p4 : data_V);

assign select_ln203_8_fu_619_p3 = ((icmp_ln203_2_fu_557_p2[0:0] === 1'b1) ? sub_ln203_10_fu_591_p2 : tmp_173_fu_563_p3);

assign select_ln203_9_fu_734_p3 = ((icmp_ln203_3_fu_688_p2[0:0] === 1'b1) ? sub_ln203_13_fu_716_p2 : sub_ln203_15_fu_728_p2);

assign select_ln203_fu_341_p3 = ((icmp_ln203_fu_295_p2[0:0] === 1'b1) ? sub_ln203_1_fu_323_p2 : sub_ln203_3_fu_335_p2);

assign shl_ln490_1_fu_259_p3 = {{iloop_0_reg_166}, {1'd0}};

assign shl_ln_fu_251_p3 = {{iloop_0_reg_166}, {3'd0}};

assign sub_ln203_10_fu_591_p2 = ($signed(11'd1919) - $signed(tmp_173_fu_563_p3));

assign sub_ln203_11_fu_597_p2 = (trunc_ln203_4_fu_571_p1 - tmp_173_fu_563_p3);

assign sub_ln203_12_fu_627_p2 = ($signed(11'd1919) - $signed(select_ln203_6_fu_603_p3));

assign sub_ln203_13_fu_716_p2 = (tmp_175_fu_694_p3 - trunc_ln203_6_fu_702_p1);

assign sub_ln203_14_fu_722_p2 = ($signed(11'd1919) - $signed(tmp_175_fu_694_p3));

assign sub_ln203_15_fu_728_p2 = (trunc_ln203_6_fu_702_p1 - tmp_175_fu_694_p3);

assign sub_ln203_16_fu_758_p2 = ($signed(11'd1919) - $signed(select_ln203_9_fu_734_p3));

assign sub_ln203_17_fu_847_p2 = (tmp_177_fu_825_p3 - trunc_ln203_8_fu_833_p1);

assign sub_ln203_18_fu_853_p2 = ($signed(11'd1919) - $signed(tmp_177_fu_825_p3));

assign sub_ln203_19_fu_859_p2 = (trunc_ln203_8_fu_833_p1 - tmp_177_fu_825_p3);

assign sub_ln203_1_fu_323_p2 = (tmp_169_fu_301_p3 - trunc_ln203_fu_309_p1);

assign sub_ln203_20_fu_889_p2 = ($signed(11'd1919) - $signed(select_ln203_12_fu_865_p3));

assign sub_ln203_21_fu_978_p2 = (tmp_179_fu_956_p3 - trunc_ln203_10_fu_964_p1);

assign sub_ln203_22_fu_984_p2 = ($signed(11'd1919) - $signed(tmp_179_fu_956_p3));

assign sub_ln203_23_fu_990_p2 = (trunc_ln203_10_fu_964_p1 - tmp_179_fu_956_p3);

assign sub_ln203_24_fu_1020_p2 = ($signed(11'd1919) - $signed(select_ln203_15_fu_996_p3));

assign sub_ln203_2_fu_329_p2 = ($signed(11'd1919) - $signed(tmp_169_fu_301_p3));

assign sub_ln203_3_fu_335_p2 = (trunc_ln203_fu_309_p1 - tmp_169_fu_301_p3);

assign sub_ln203_4_fu_365_p2 = ($signed(11'd1919) - $signed(select_ln203_fu_341_p3));

assign sub_ln203_5_fu_454_p2 = (tmp_171_fu_432_p3 - trunc_ln203_2_fu_440_p1);

assign sub_ln203_6_fu_460_p2 = ($signed(11'd1919) - $signed(tmp_171_fu_432_p3));

assign sub_ln203_7_fu_466_p2 = (trunc_ln203_2_fu_440_p1 - tmp_171_fu_432_p3);

assign sub_ln203_8_fu_496_p2 = ($signed(11'd1919) - $signed(select_ln203_3_fu_472_p3));

assign sub_ln203_9_fu_585_p2 = (tmp_173_fu_563_p3 - trunc_ln203_4_fu_571_p1);

assign sub_ln203_fu_271_p2 = (shl_ln_fu_251_p3 - zext_ln203_fu_267_p1);

assign tmp_169_fu_301_p3 = {{empty_20_fu_277_p1}, {4'd0}};

integer ap_tvar_int_0;

always @ (data_V) begin
    for (ap_tvar_int_0 = 1920 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 1919 - 0) begin
            tmp_170_fu_313_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_170_fu_313_p4[ap_tvar_int_0] = data_V[1919 - ap_tvar_int_0];
        end
    end
end

assign tmp_171_fu_432_p3 = {{empty_22_fu_408_p1}, {4'd0}};

integer ap_tvar_int_1;

always @ (data_V) begin
    for (ap_tvar_int_1 = 1920 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 1919 - 0) begin
            tmp_172_fu_444_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_172_fu_444_p4[ap_tvar_int_1] = data_V[1919 - ap_tvar_int_1];
        end
    end
end

assign tmp_173_fu_563_p3 = {{empty_24_fu_539_p1}, {4'd0}};

integer ap_tvar_int_2;

always @ (data_V) begin
    for (ap_tvar_int_2 = 1920 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 1919 - 0) begin
            tmp_174_fu_575_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_174_fu_575_p4[ap_tvar_int_2] = data_V[1919 - ap_tvar_int_2];
        end
    end
end

assign tmp_175_fu_694_p3 = {{empty_26_fu_670_p1}, {4'd0}};

integer ap_tvar_int_3;

always @ (data_V) begin
    for (ap_tvar_int_3 = 1920 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 1919 - 0) begin
            tmp_176_fu_706_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_176_fu_706_p4[ap_tvar_int_3] = data_V[1919 - ap_tvar_int_3];
        end
    end
end

assign tmp_177_fu_825_p3 = {{empty_28_fu_801_p1}, {4'd0}};

integer ap_tvar_int_4;

always @ (data_V) begin
    for (ap_tvar_int_4 = 1920 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 1919 - 0) begin
            tmp_178_fu_837_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            tmp_178_fu_837_p4[ap_tvar_int_4] = data_V[1919 - ap_tvar_int_4];
        end
    end
end

assign tmp_179_fu_956_p3 = {{empty_30_fu_932_p1}, {4'd0}};

integer ap_tvar_int_5;

always @ (data_V) begin
    for (ap_tvar_int_5 = 1920 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 1919 - 0) begin
            tmp_180_fu_968_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            tmp_180_fu_968_p4[ap_tvar_int_5] = data_V[1919 - ap_tvar_int_5];
        end
    end
end

assign tmp_1_fu_412_p3 = {{or_ln203_fu_402_p2}, {4'd0}};

assign tmp_2_fu_543_p3 = {{add_ln203_fu_533_p2}, {4'd0}};

assign tmp_3_fu_674_p3 = {{add_ln203_1_fu_664_p2}, {4'd0}};

assign tmp_4_fu_805_p3 = {{add_ln203_2_fu_795_p2}, {4'd0}};

assign tmp_5_fu_936_p3 = {{add_ln203_3_fu_926_p2}, {4'd0}};

assign tmp_fu_281_p3 = {{sub_ln203_fu_271_p2}, {4'd0}};

assign trunc_ln203_10_fu_964_p1 = empty_31_fu_944_p2[10:0];

assign trunc_ln203_2_fu_440_p1 = empty_23_fu_420_p2[10:0];

assign trunc_ln203_4_fu_571_p1 = empty_25_fu_551_p2[10:0];

assign trunc_ln203_6_fu_702_p1 = empty_27_fu_682_p2[10:0];

assign trunc_ln203_8_fu_833_p1 = empty_29_fu_813_p2[10:0];

assign trunc_ln203_fu_309_p1 = empty_21_fu_289_p2[10:0];

assign zext_ln203_10_fu_899_p1 = sub_ln203_20_fu_889_p2;

assign zext_ln203_11_fu_1026_p1 = select_ln203_17_fu_1012_p3;

assign zext_ln203_12_fu_1030_p1 = sub_ln203_24_fu_1020_p2;

assign zext_ln203_1_fu_371_p1 = select_ln203_2_fu_357_p3;

assign zext_ln203_2_fu_375_p1 = sub_ln203_4_fu_365_p2;

assign zext_ln203_3_fu_502_p1 = select_ln203_5_fu_488_p3;

assign zext_ln203_4_fu_506_p1 = sub_ln203_8_fu_496_p2;

assign zext_ln203_5_fu_633_p1 = select_ln203_8_fu_619_p3;

assign zext_ln203_6_fu_637_p1 = sub_ln203_12_fu_627_p2;

assign zext_ln203_7_fu_764_p1 = select_ln203_11_fu_750_p3;

assign zext_ln203_8_fu_768_p1 = sub_ln203_16_fu_758_p2;

assign zext_ln203_9_fu_895_p1 = select_ln203_14_fu_881_p3;

assign zext_ln203_fu_267_p1 = shl_ln490_1_fu_259_p3;

endmodule //gru_stack_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config2_s
